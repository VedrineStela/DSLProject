/*
 * generated by Xtext 2.25.0
 */
package fr.univcotedazur.l3ia.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class LegoLanguageGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class LegoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Lego");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLegoAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLegoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRobotKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRobotAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRobotRobotParserRuleCall_4_1_0 = (RuleCall)cRobotAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Lego returns Lego:
		//    {Lego}
		//    'Lego'
		//    name=EString
		//    '{'
		//        ('robot' robot=Robot)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Lego}
		//'Lego'
		//name=EString
		//'{'
		//    ('robot' robot=Robot)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Lego}
		public Action getLegoAction_0() { return cLegoAction_0; }
		
		//'Lego'
		public Keyword getLegoKeyword_1() { return cLegoKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('robot' robot=Robot)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'robot'
		public Keyword getRobotKeyword_4_0() { return cRobotKeyword_4_0; }
		
		//robot=Robot
		public Assignment getRobotAssignment_4_1() { return cRobotAssignment_4_1; }
		
		//Robot
		public RuleCall getRobotRobotParserRuleCall_4_1_0() { return cRobotRobotParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MotorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Motor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMotor_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLeftMotorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRightMotorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Motor returns Motor:
		//    Motor_Impl | LeftMotor | RightMotor;
		@Override public ParserRule getRule() { return rule; }
		
		//Motor_Impl | LeftMotor | RightMotor
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Motor_Impl
		public RuleCall getMotor_ImplParserRuleCall_0() { return cMotor_ImplParserRuleCall_0; }
		
		//LeftMotor
		public RuleCall getLeftMotorParserRuleCall_1() { return cLeftMotorParserRuleCall_1; }
		
		//RightMotor
		public RuleCall getRightMotorParserRuleCall_2() { return cRightMotorParserRuleCall_2; }
	}
	public class SensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Sensor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSensor_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cColorSensorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPositionSensorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Sensor returns Sensor:
		//    Sensor_Impl | ColorSensor | PositionSensor;
		@Override public ParserRule getRule() { return rule; }
		
		//Sensor_Impl | ColorSensor | PositionSensor
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Sensor_Impl
		public RuleCall getSensor_ImplParserRuleCall_0() { return cSensor_ImplParserRuleCall_0; }
		
		//ColorSensor
		public RuleCall getColorSensorParserRuleCall_1() { return cColorSensorParserRuleCall_1; }
		
		//PositionSensor
		public RuleCall getPositionSensorParserRuleCall_2() { return cPositionSensorParserRuleCall_2; }
	}
	public class ActorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Actor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMotor_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLeftMotorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRightMotorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Actor returns Actor:
		//    Motor_Impl | LeftMotor | RightMotor;
		@Override public ParserRule getRule() { return rule; }
		
		//Motor_Impl | LeftMotor | RightMotor
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Motor_Impl
		public RuleCall getMotor_ImplParserRuleCall_0() { return cMotor_ImplParserRuleCall_0; }
		
		//LeftMotor
		public RuleCall getLeftMotorParserRuleCall_1() { return cLeftMotorParserRuleCall_1; }
		
		//RightMotor
		public RuleCall getRightMotorParserRuleCall_2() { return cRightMotorParserRuleCall_2; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Action");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGoParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRightParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLeftParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cContinueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cBackParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cShutDownParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cDownParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cRotateParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//Action returns Action:
		//    Go | Right | Left | Continue | Back | ShutDown | Down | Rotate;
		@Override public ParserRule getRule() { return rule; }
		
		//Go | Right | Left | Continue | Back | ShutDown | Down | Rotate
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Go
		public RuleCall getGoParserRuleCall_0() { return cGoParserRuleCall_0; }
		
		//Right
		public RuleCall getRightParserRuleCall_1() { return cRightParserRuleCall_1; }
		
		//Left
		public RuleCall getLeftParserRuleCall_2() { return cLeftParserRuleCall_2; }
		
		//Continue
		public RuleCall getContinueParserRuleCall_3() { return cContinueParserRuleCall_3; }
		
		//Back
		public RuleCall getBackParserRuleCall_4() { return cBackParserRuleCall_4; }
		
		//ShutDown
		public RuleCall getShutDownParserRuleCall_5() { return cShutDownParserRuleCall_5; }
		
		//Down
		public RuleCall getDownParserRuleCall_6() { return cDownParserRuleCall_6; }
		
		//Rotate
		public RuleCall getRotateParserRuleCall_7() { return cRotateParserRuleCall_7; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class RobotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Robot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRobotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cMoteurKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMoteurAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMoteurMotorParserRuleCall_5_0 = (RuleCall)cMoteurAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMoteurAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMoteurMotorParserRuleCall_6_1_0 = (RuleCall)cMoteurAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftmotorKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cLeftmotorAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cLeftmotorLeftMotorParserRuleCall_9_0 = (RuleCall)cLeftmotorAssignment_9.eContents().get(0);
		private final Keyword cRightmotorKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cRightmotorAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cRightmotorRightMotorParserRuleCall_11_0 = (RuleCall)cRightmotorAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cSensorKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cSensorAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cSensorSensorParserRuleCall_12_2_0 = (RuleCall)cSensorAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cSensorAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cSensorSensorParserRuleCall_12_3_1_0 = (RuleCall)cSensorAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cPortKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cPortAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cPortPortParserRuleCall_13_2_0 = (RuleCall)cPortAssignment_13_2.eContents().get(0);
		private final Group cGroup_13_3 = (Group)cGroup_13.eContents().get(3);
		private final Keyword cCommaKeyword_13_3_0 = (Keyword)cGroup_13_3.eContents().get(0);
		private final Assignment cPortAssignment_13_3_1 = (Assignment)cGroup_13_3.eContents().get(1);
		private final RuleCall cPortPortParserRuleCall_13_3_1_0 = (RuleCall)cPortAssignment_13_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cActorKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Assignment cActorAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cActorActorParserRuleCall_14_2_0 = (RuleCall)cActorAssignment_14_2.eContents().get(0);
		private final Group cGroup_14_3 = (Group)cGroup_14.eContents().get(3);
		private final Keyword cCommaKeyword_14_3_0 = (Keyword)cGroup_14_3.eContents().get(0);
		private final Assignment cActorAssignment_14_3_1 = (Assignment)cGroup_14_3.eContents().get(1);
		private final RuleCall cActorActorParserRuleCall_14_3_1_0 = (RuleCall)cActorAssignment_14_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14_4 = (Keyword)cGroup_14.eContents().get(4);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cActionKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Assignment cActionAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cActionActionParserRuleCall_15_2_0 = (RuleCall)cActionAssignment_15_2.eContents().get(0);
		private final Group cGroup_15_3 = (Group)cGroup_15.eContents().get(3);
		private final Keyword cCommaKeyword_15_3_0 = (Keyword)cGroup_15_3.eContents().get(0);
		private final Assignment cActionAssignment_15_3_1 = (Assignment)cGroup_15_3.eContents().get(1);
		private final RuleCall cActionActionParserRuleCall_15_3_1_0 = (RuleCall)cActionAssignment_15_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15_4 = (Keyword)cGroup_15.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Robot returns Robot:
		//    'Robot'
		//    name=EString
		//    '{'
		//        'moteur' '{' moteur+=Motor ( "," moteur+=Motor)* '}'
		//        'leftmotor' leftmotor=LeftMotor
		//        'rightmotor' rightmotor=RightMotor
		//        ('sensor' '{' sensor+=Sensor ( "," sensor+=Sensor)* '}' )?
		//        ('port' '{' port+=Port ( "," port+=Port)* '}' )?
		//        ('actor' '{' actor+=Actor ( "," actor+=Actor)* '}' )?
		//        ('action' '{' action+=Action ( "," action+=Action)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Robot'
		//name=EString
		//'{'
		//    'moteur' '{' moteur+=Motor ( "," moteur+=Motor)* '}'
		//    'leftmotor' leftmotor=LeftMotor
		//    'rightmotor' rightmotor=RightMotor
		//    ('sensor' '{' sensor+=Sensor ( "," sensor+=Sensor)* '}' )?
		//    ('port' '{' port+=Port ( "," port+=Port)* '}' )?
		//    ('actor' '{' actor+=Actor ( "," actor+=Actor)* '}' )?
		//    ('action' '{' action+=Action ( "," action+=Action)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Robot'
		public Keyword getRobotKeyword_0() { return cRobotKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'moteur'
		public Keyword getMoteurKeyword_3() { return cMoteurKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//moteur+=Motor
		public Assignment getMoteurAssignment_5() { return cMoteurAssignment_5; }
		
		//Motor
		public RuleCall getMoteurMotorParserRuleCall_5_0() { return cMoteurMotorParserRuleCall_5_0; }
		
		//( "," moteur+=Motor)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//moteur+=Motor
		public Assignment getMoteurAssignment_6_1() { return cMoteurAssignment_6_1; }
		
		//Motor
		public RuleCall getMoteurMotorParserRuleCall_6_1_0() { return cMoteurMotorParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'leftmotor'
		public Keyword getLeftmotorKeyword_8() { return cLeftmotorKeyword_8; }
		
		//leftmotor=LeftMotor
		public Assignment getLeftmotorAssignment_9() { return cLeftmotorAssignment_9; }
		
		//LeftMotor
		public RuleCall getLeftmotorLeftMotorParserRuleCall_9_0() { return cLeftmotorLeftMotorParserRuleCall_9_0; }
		
		//'rightmotor'
		public Keyword getRightmotorKeyword_10() { return cRightmotorKeyword_10; }
		
		//rightmotor=RightMotor
		public Assignment getRightmotorAssignment_11() { return cRightmotorAssignment_11; }
		
		//RightMotor
		public RuleCall getRightmotorRightMotorParserRuleCall_11_0() { return cRightmotorRightMotorParserRuleCall_11_0; }
		
		//('sensor' '{' sensor+=Sensor ( "," sensor+=Sensor)* '}' )?
		public Group getGroup_12() { return cGroup_12; }
		
		//'sensor'
		public Keyword getSensorKeyword_12_0() { return cSensorKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//sensor+=Sensor
		public Assignment getSensorAssignment_12_2() { return cSensorAssignment_12_2; }
		
		//Sensor
		public RuleCall getSensorSensorParserRuleCall_12_2_0() { return cSensorSensorParserRuleCall_12_2_0; }
		
		//( "," sensor+=Sensor)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//sensor+=Sensor
		public Assignment getSensorAssignment_12_3_1() { return cSensorAssignment_12_3_1; }
		
		//Sensor
		public RuleCall getSensorSensorParserRuleCall_12_3_1_0() { return cSensorSensorParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//('port' '{' port+=Port ( "," port+=Port)* '}' )?
		public Group getGroup_13() { return cGroup_13; }
		
		//'port'
		public Keyword getPortKeyword_13_0() { return cPortKeyword_13_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13_1() { return cLeftCurlyBracketKeyword_13_1; }
		
		//port+=Port
		public Assignment getPortAssignment_13_2() { return cPortAssignment_13_2; }
		
		//Port
		public RuleCall getPortPortParserRuleCall_13_2_0() { return cPortPortParserRuleCall_13_2_0; }
		
		//( "," port+=Port)*
		public Group getGroup_13_3() { return cGroup_13_3; }
		
		//","
		public Keyword getCommaKeyword_13_3_0() { return cCommaKeyword_13_3_0; }
		
		//port+=Port
		public Assignment getPortAssignment_13_3_1() { return cPortAssignment_13_3_1; }
		
		//Port
		public RuleCall getPortPortParserRuleCall_13_3_1_0() { return cPortPortParserRuleCall_13_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13_4() { return cRightCurlyBracketKeyword_13_4; }
		
		//('actor' '{' actor+=Actor ( "," actor+=Actor)* '}' )?
		public Group getGroup_14() { return cGroup_14; }
		
		//'actor'
		public Keyword getActorKeyword_14_0() { return cActorKeyword_14_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14_1() { return cLeftCurlyBracketKeyword_14_1; }
		
		//actor+=Actor
		public Assignment getActorAssignment_14_2() { return cActorAssignment_14_2; }
		
		//Actor
		public RuleCall getActorActorParserRuleCall_14_2_0() { return cActorActorParserRuleCall_14_2_0; }
		
		//( "," actor+=Actor)*
		public Group getGroup_14_3() { return cGroup_14_3; }
		
		//","
		public Keyword getCommaKeyword_14_3_0() { return cCommaKeyword_14_3_0; }
		
		//actor+=Actor
		public Assignment getActorAssignment_14_3_1() { return cActorAssignment_14_3_1; }
		
		//Actor
		public RuleCall getActorActorParserRuleCall_14_3_1_0() { return cActorActorParserRuleCall_14_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14_4() { return cRightCurlyBracketKeyword_14_4; }
		
		//('action' '{' action+=Action ( "," action+=Action)* '}' )?
		public Group getGroup_15() { return cGroup_15; }
		
		//'action'
		public Keyword getActionKeyword_15_0() { return cActionKeyword_15_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_15_1() { return cLeftCurlyBracketKeyword_15_1; }
		
		//action+=Action
		public Assignment getActionAssignment_15_2() { return cActionAssignment_15_2; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_15_2_0() { return cActionActionParserRuleCall_15_2_0; }
		
		//( "," action+=Action)*
		public Group getGroup_15_3() { return cGroup_15_3; }
		
		//","
		public Keyword getCommaKeyword_15_3_0() { return cCommaKeyword_15_3_0; }
		
		//action+=Action
		public Assignment getActionAssignment_15_3_1() { return cActionAssignment_15_3_1; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_15_3_1_0() { return cActionActionParserRuleCall_15_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15_4() { return cRightCurlyBracketKeyword_15_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}
	public class Motor_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Motor_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMotorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMotorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Motor_Impl returns Motor:
		//    {Motor}
		//    'Motor'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Motor}
		//'Motor'
		public Group getGroup() { return cGroup; }
		
		//{Motor}
		public Action getMotorAction_0() { return cMotorAction_0; }
		
		//'Motor'
		public Keyword getMotorKeyword_1() { return cMotorKeyword_1; }
	}
	public class LeftMotorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.LeftMotor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLeftMotorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftMotorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//LeftMotor returns LeftMotor:
		//    {LeftMotor}
		//    'LeftMotor'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{LeftMotor}
		//'LeftMotor'
		public Group getGroup() { return cGroup; }
		
		//{LeftMotor}
		public Action getLeftMotorAction_0() { return cLeftMotorAction_0; }
		
		//'LeftMotor'
		public Keyword getLeftMotorKeyword_1() { return cLeftMotorKeyword_1; }
	}
	public class RightMotorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.RightMotor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRightMotorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRightMotorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//RightMotor returns RightMotor:
		//    {RightMotor}
		//    'RightMotor'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{RightMotor}
		//'RightMotor'
		public Group getGroup() { return cGroup; }
		
		//{RightMotor}
		public Action getRightMotorAction_0() { return cRightMotorAction_0; }
		
		//'RightMotor'
		public Keyword getRightMotorKeyword_1() { return cRightMotorKeyword_1; }
	}
	public class Sensor_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Sensor_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Sensor_Impl returns Sensor:
		//    {Sensor}
		//    'Sensor'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Sensor}
		//'Sensor'
		public Group getGroup() { return cGroup; }
		
		//{Sensor}
		public Action getSensorAction_0() { return cSensorAction_0; }
		
		//'Sensor'
		public Keyword getSensorKeyword_1() { return cSensorKeyword_1; }
	}
	public class PortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Port");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPortAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Port returns Port:
		//    {Port}
		//    'Port'
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Port}
		//'Port'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{Port}
		public Action getPortAction_0() { return cPortAction_0; }
		
		//'Port'
		public Keyword getPortKeyword_1() { return cPortKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class ColorSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.ColorSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cColorSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cColorSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ColorSensor returns ColorSensor:
		//    {ColorSensor}
		//    'ColorSensor'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{ColorSensor}
		//'ColorSensor'
		public Group getGroup() { return cGroup; }
		
		//{ColorSensor}
		public Action getColorSensorAction_0() { return cColorSensorAction_0; }
		
		//'ColorSensor'
		public Keyword getColorSensorKeyword_1() { return cColorSensorKeyword_1; }
	}
	public class PositionSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.PositionSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPositionSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPositionSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//PositionSensor returns PositionSensor:
		//    {PositionSensor}
		//    'PositionSensor'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{PositionSensor}
		//'PositionSensor'
		public Group getGroup() { return cGroup; }
		
		//{PositionSensor}
		public Action getPositionSensorAction_0() { return cPositionSensorAction_0; }
		
		//'PositionSensor'
		public Keyword getPositionSensorKeyword_1() { return cPositionSensorKeyword_1; }
	}
	public class GoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Go");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGoAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Go returns Go:
		//    {Go}
		//    'Go'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Go}
		//'Go'
		public Group getGroup() { return cGroup; }
		
		//{Go}
		public Action getGoAction_0() { return cGoAction_0; }
		
		//'Go'
		public Keyword getGoKeyword_1() { return cGoKeyword_1; }
	}
	public class RightElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Right");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRightAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRightKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Right returns Right:
		//    {Right}
		//    'Right'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Right}
		//'Right'
		public Group getGroup() { return cGroup; }
		
		//{Right}
		public Action getRightAction_0() { return cRightAction_0; }
		
		//'Right'
		public Keyword getRightKeyword_1() { return cRightKeyword_1; }
	}
	public class LeftElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Left");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLeftAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Left returns Left:
		//    {Left}
		//    'Left'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Left}
		//'Left'
		public Group getGroup() { return cGroup; }
		
		//{Left}
		public Action getLeftAction_0() { return cLeftAction_0; }
		
		//'Left'
		public Keyword getLeftKeyword_1() { return cLeftKeyword_1; }
	}
	public class ContinueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Continue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContinueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cContinueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Continue returns Continue:
		//    {Continue}
		//    'Continue'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Continue}
		//'Continue'
		public Group getGroup() { return cGroup; }
		
		//{Continue}
		public Action getContinueAction_0() { return cContinueAction_0; }
		
		//'Continue'
		public Keyword getContinueKeyword_1() { return cContinueKeyword_1; }
	}
	public class BackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Back");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBackAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBackKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Back returns Back:
		//    {Back}
		//    'Back'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Back}
		//'Back'
		public Group getGroup() { return cGroup; }
		
		//{Back}
		public Action getBackAction_0() { return cBackAction_0; }
		
		//'Back'
		public Keyword getBackKeyword_1() { return cBackKeyword_1; }
	}
	public class ShutDownElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.ShutDown");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cShutDownAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cShutDownKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ShutDown returns ShutDown:
		//    {ShutDown}
		//    'ShutDown'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{ShutDown}
		//'ShutDown'
		public Group getGroup() { return cGroup; }
		
		//{ShutDown}
		public Action getShutDownAction_0() { return cShutDownAction_0; }
		
		//'ShutDown'
		public Keyword getShutDownKeyword_1() { return cShutDownKeyword_1; }
	}
	public class DownElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Down");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDownAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDownKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Down returns Down:
		//    {Down}
		//    'Down'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Down}
		//'Down'
		public Group getGroup() { return cGroup; }
		
		//{Down}
		public Action getDownAction_0() { return cDownAction_0; }
		
		//'Down'
		public Keyword getDownKeyword_1() { return cDownKeyword_1; }
	}
	public class RotateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazur.l3ia.LegoLanguage.Rotate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRotateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRotateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Rotate returns Rotate:
		//    {Rotate}
		//    'Rotate'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Rotate}
		//'Rotate'
		public Group getGroup() { return cGroup; }
		
		//{Rotate}
		public Action getRotateAction_0() { return cRotateAction_0; }
		
		//'Rotate'
		public Keyword getRotateKeyword_1() { return cRotateKeyword_1; }
	}
	
	
	private final LegoElements pLego;
	private final MotorElements pMotor;
	private final SensorElements pSensor;
	private final ActorElements pActor;
	private final ActionElements pAction;
	private final EStringElements pEString;
	private final RobotElements pRobot;
	private final Motor_ImplElements pMotor_Impl;
	private final LeftMotorElements pLeftMotor;
	private final RightMotorElements pRightMotor;
	private final Sensor_ImplElements pSensor_Impl;
	private final PortElements pPort;
	private final ColorSensorElements pColorSensor;
	private final PositionSensorElements pPositionSensor;
	private final GoElements pGo;
	private final RightElements pRight;
	private final LeftElements pLeft;
	private final ContinueElements pContinue;
	private final BackElements pBack;
	private final ShutDownElements pShutDown;
	private final DownElements pDown;
	private final RotateElements pRotate;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public LegoLanguageGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pLego = new LegoElements();
		this.pMotor = new MotorElements();
		this.pSensor = new SensorElements();
		this.pActor = new ActorElements();
		this.pAction = new ActionElements();
		this.pEString = new EStringElements();
		this.pRobot = new RobotElements();
		this.pMotor_Impl = new Motor_ImplElements();
		this.pLeftMotor = new LeftMotorElements();
		this.pRightMotor = new RightMotorElements();
		this.pSensor_Impl = new Sensor_ImplElements();
		this.pPort = new PortElements();
		this.pColorSensor = new ColorSensorElements();
		this.pPositionSensor = new PositionSensorElements();
		this.pGo = new GoElements();
		this.pRight = new RightElements();
		this.pLeft = new LeftElements();
		this.pContinue = new ContinueElements();
		this.pBack = new BackElements();
		this.pShutDown = new ShutDownElements();
		this.pDown = new DownElements();
		this.pRotate = new RotateElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.univcotedazur.l3ia.LegoLanguage".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Lego returns Lego:
	//    {Lego}
	//    'Lego'
	//    name=EString
	//    '{'
	//        ('robot' robot=Robot)?
	//    '}';
	public LegoElements getLegoAccess() {
		return pLego;
	}
	
	public ParserRule getLegoRule() {
		return getLegoAccess().getRule();
	}
	
	//Motor returns Motor:
	//    Motor_Impl | LeftMotor | RightMotor;
	public MotorElements getMotorAccess() {
		return pMotor;
	}
	
	public ParserRule getMotorRule() {
		return getMotorAccess().getRule();
	}
	
	//Sensor returns Sensor:
	//    Sensor_Impl | ColorSensor | PositionSensor;
	public SensorElements getSensorAccess() {
		return pSensor;
	}
	
	public ParserRule getSensorRule() {
		return getSensorAccess().getRule();
	}
	
	//Actor returns Actor:
	//    Motor_Impl | LeftMotor | RightMotor;
	public ActorElements getActorAccess() {
		return pActor;
	}
	
	public ParserRule getActorRule() {
		return getActorAccess().getRule();
	}
	
	//Action returns Action:
	//    Go | Right | Left | Continue | Back | ShutDown | Down | Rotate;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Robot returns Robot:
	//    'Robot'
	//    name=EString
	//    '{'
	//        'moteur' '{' moteur+=Motor ( "," moteur+=Motor)* '}'
	//        'leftmotor' leftmotor=LeftMotor
	//        'rightmotor' rightmotor=RightMotor
	//        ('sensor' '{' sensor+=Sensor ( "," sensor+=Sensor)* '}' )?
	//        ('port' '{' port+=Port ( "," port+=Port)* '}' )?
	//        ('actor' '{' actor+=Actor ( "," actor+=Actor)* '}' )?
	//        ('action' '{' action+=Action ( "," action+=Action)* '}' )?
	//    '}';
	public RobotElements getRobotAccess() {
		return pRobot;
	}
	
	public ParserRule getRobotRule() {
		return getRobotAccess().getRule();
	}
	
	//Motor_Impl returns Motor:
	//    {Motor}
	//    'Motor'
	//    ;
	public Motor_ImplElements getMotor_ImplAccess() {
		return pMotor_Impl;
	}
	
	public ParserRule getMotor_ImplRule() {
		return getMotor_ImplAccess().getRule();
	}
	
	//LeftMotor returns LeftMotor:
	//    {LeftMotor}
	//    'LeftMotor'
	//    ;
	public LeftMotorElements getLeftMotorAccess() {
		return pLeftMotor;
	}
	
	public ParserRule getLeftMotorRule() {
		return getLeftMotorAccess().getRule();
	}
	
	//RightMotor returns RightMotor:
	//    {RightMotor}
	//    'RightMotor'
	//    ;
	public RightMotorElements getRightMotorAccess() {
		return pRightMotor;
	}
	
	public ParserRule getRightMotorRule() {
		return getRightMotorAccess().getRule();
	}
	
	//Sensor_Impl returns Sensor:
	//    {Sensor}
	//    'Sensor'
	//    ;
	public Sensor_ImplElements getSensor_ImplAccess() {
		return pSensor_Impl;
	}
	
	public ParserRule getSensor_ImplRule() {
		return getSensor_ImplAccess().getRule();
	}
	
	//Port returns Port:
	//    {Port}
	//    'Port'
	//    name=EString;
	public PortElements getPortAccess() {
		return pPort;
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}
	
	//ColorSensor returns ColorSensor:
	//    {ColorSensor}
	//    'ColorSensor'
	//    ;
	public ColorSensorElements getColorSensorAccess() {
		return pColorSensor;
	}
	
	public ParserRule getColorSensorRule() {
		return getColorSensorAccess().getRule();
	}
	
	//PositionSensor returns PositionSensor:
	//    {PositionSensor}
	//    'PositionSensor'
	//    ;
	public PositionSensorElements getPositionSensorAccess() {
		return pPositionSensor;
	}
	
	public ParserRule getPositionSensorRule() {
		return getPositionSensorAccess().getRule();
	}
	
	//Go returns Go:
	//    {Go}
	//    'Go'
	//    ;
	public GoElements getGoAccess() {
		return pGo;
	}
	
	public ParserRule getGoRule() {
		return getGoAccess().getRule();
	}
	
	//Right returns Right:
	//    {Right}
	//    'Right'
	//    ;
	public RightElements getRightAccess() {
		return pRight;
	}
	
	public ParserRule getRightRule() {
		return getRightAccess().getRule();
	}
	
	//Left returns Left:
	//    {Left}
	//    'Left'
	//    ;
	public LeftElements getLeftAccess() {
		return pLeft;
	}
	
	public ParserRule getLeftRule() {
		return getLeftAccess().getRule();
	}
	
	//Continue returns Continue:
	//    {Continue}
	//    'Continue'
	//    ;
	public ContinueElements getContinueAccess() {
		return pContinue;
	}
	
	public ParserRule getContinueRule() {
		return getContinueAccess().getRule();
	}
	
	//Back returns Back:
	//    {Back}
	//    'Back'
	//    ;
	public BackElements getBackAccess() {
		return pBack;
	}
	
	public ParserRule getBackRule() {
		return getBackAccess().getRule();
	}
	
	//ShutDown returns ShutDown:
	//    {ShutDown}
	//    'ShutDown'
	//    ;
	public ShutDownElements getShutDownAccess() {
		return pShutDown;
	}
	
	public ParserRule getShutDownRule() {
		return getShutDownAccess().getRule();
	}
	
	//Down returns Down:
	//    {Down}
	//    'Down'
	//    ;
	public DownElements getDownAccess() {
		return pDown;
	}
	
	public ParserRule getDownRule() {
		return getDownAccess().getRule();
	}
	
	//Rotate returns Rotate:
	//    {Rotate}
	//    'Rotate'
	//    ;
	public RotateElements getRotateAccess() {
		return pRotate;
	}
	
	public ParserRule getRotateRule() {
		return getRotateAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
