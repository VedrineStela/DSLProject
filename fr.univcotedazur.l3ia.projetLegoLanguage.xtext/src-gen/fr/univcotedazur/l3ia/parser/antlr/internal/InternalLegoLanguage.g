/*
 * generated by Xtext 2.25.0
 */
grammar InternalLegoLanguage;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.univcotedazur.l3ia.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.univcotedazur.l3ia.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.univcotedazur.l3ia.services.LegoLanguageGrammarAccess;

}

@parser::members {

 	private LegoLanguageGrammarAccess grammarAccess;

    public InternalLegoLanguageParser(TokenStream input, LegoLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Lego";
   	}

   	@Override
   	protected LegoLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleLego
entryRuleLego returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLegoRule()); }
	iv_ruleLego=ruleLego
	{ $current=$iv_ruleLego.current; }
	EOF;

// Rule Lego
ruleLego returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLegoAccess().getLegoAction_0(),
					$current);
			}
		)
		otherlv_1='Lego'
		{
			newLeafNode(otherlv_1, grammarAccess.getLegoAccess().getLegoKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLegoAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLegoRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.univcotedazur.l3ia.LegoLanguage.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLegoAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='robot'
			{
				newLeafNode(otherlv_4, grammarAccess.getLegoAccess().getRobotKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLegoAccess().getRobotRobotParserRuleCall_4_1_0());
					}
					lv_robot_5_0=ruleRobot
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLegoRule());
						}
						set(
							$current,
							"robot",
							lv_robot_5_0,
							"fr.univcotedazur.l3ia.LegoLanguage.Robot");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLegoAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMotor
entryRuleMotor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMotorRule()); }
	iv_ruleMotor=ruleMotor
	{ $current=$iv_ruleMotor.current; }
	EOF;

// Rule Motor
ruleMotor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMotorAccess().getMotor_ImplParserRuleCall_0());
		}
		this_Motor_Impl_0=ruleMotor_Impl
		{
			$current = $this_Motor_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMotorAccess().getLeftMotorParserRuleCall_1());
		}
		this_LeftMotor_1=ruleLeftMotor
		{
			$current = $this_LeftMotor_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMotorAccess().getRightMotorParserRuleCall_2());
		}
		this_RightMotor_2=ruleRightMotor
		{
			$current = $this_RightMotor_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSensorAccess().getSensor_ImplParserRuleCall_0());
		}
		this_Sensor_Impl_0=ruleSensor_Impl
		{
			$current = $this_Sensor_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSensorAccess().getColorSensorParserRuleCall_1());
		}
		this_ColorSensor_1=ruleColorSensor
		{
			$current = $this_ColorSensor_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSensorAccess().getPositionSensorParserRuleCall_2());
		}
		this_PositionSensor_2=rulePositionSensor
		{
			$current = $this_PositionSensor_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	iv_ruleActor=ruleActor
	{ $current=$iv_ruleActor.current; }
	EOF;

// Rule Actor
ruleActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActorAccess().getMotor_ImplParserRuleCall_0());
		}
		this_Motor_Impl_0=ruleMotor_Impl
		{
			$current = $this_Motor_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActorAccess().getLeftMotorParserRuleCall_1());
		}
		this_LeftMotor_1=ruleLeftMotor
		{
			$current = $this_LeftMotor_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActorAccess().getRightMotorParserRuleCall_2());
		}
		this_RightMotor_2=ruleRightMotor
		{
			$current = $this_RightMotor_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getGoParserRuleCall_0());
		}
		this_Go_0=ruleGo
		{
			$current = $this_Go_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getRightParserRuleCall_1());
		}
		this_Right_1=ruleRight
		{
			$current = $this_Right_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getLeftParserRuleCall_2());
		}
		this_Left_2=ruleLeft
		{
			$current = $this_Left_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getContinueParserRuleCall_3());
		}
		this_Continue_3=ruleContinue
		{
			$current = $this_Continue_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getBackParserRuleCall_4());
		}
		this_Back_4=ruleBack
		{
			$current = $this_Back_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getShutDownParserRuleCall_5());
		}
		this_ShutDown_5=ruleShutDown
		{
			$current = $this_ShutDown_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getDownParserRuleCall_6());
		}
		this_Down_6=ruleDown
		{
			$current = $this_Down_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getRotateParserRuleCall_7());
		}
		this_Rotate_7=ruleRotate
		{
			$current = $this_Rotate_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleRobot
entryRuleRobot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotRule()); }
	iv_ruleRobot=ruleRobot
	{ $current=$iv_ruleRobot.current; }
	EOF;

// Rule Robot
ruleRobot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Robot'
		{
			newLeafNode(otherlv_0, grammarAccess.getRobotAccess().getRobotKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.univcotedazur.l3ia.LegoLanguage.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='moteur'
		{
			newLeafNode(otherlv_3, grammarAccess.getRobotAccess().getMoteurKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotAccess().getMoteurMotorParserRuleCall_5_0());
				}
				lv_moteur_5_0=ruleMotor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotRule());
					}
					add(
						$current,
						"moteur",
						lv_moteur_5_0,
						"fr.univcotedazur.l3ia.LegoLanguage.Motor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getRobotAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getMoteurMotorParserRuleCall_6_1_0());
					}
					lv_moteur_7_0=ruleMotor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"moteur",
							lv_moteur_7_0,
							"fr.univcotedazur.l3ia.LegoLanguage.Motor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_9='leftmotor'
		{
			newLeafNode(otherlv_9, grammarAccess.getRobotAccess().getLeftmotorKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotAccess().getLeftmotorLeftMotorParserRuleCall_9_0());
				}
				lv_leftmotor_10_0=ruleLeftMotor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotRule());
					}
					set(
						$current,
						"leftmotor",
						lv_leftmotor_10_0,
						"fr.univcotedazur.l3ia.LegoLanguage.LeftMotor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='rightmotor'
		{
			newLeafNode(otherlv_11, grammarAccess.getRobotAccess().getRightmotorKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotAccess().getRightmotorRightMotorParserRuleCall_11_0());
				}
				lv_rightmotor_12_0=ruleRightMotor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotRule());
					}
					set(
						$current,
						"rightmotor",
						lv_rightmotor_12_0,
						"fr.univcotedazur.l3ia.LegoLanguage.RightMotor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13='sensor'
			{
				newLeafNode(otherlv_13, grammarAccess.getRobotAccess().getSensorKeyword_12_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getSensorSensorParserRuleCall_12_2_0());
					}
					lv_sensor_15_0=ruleSensor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"sensor",
							lv_sensor_15_0,
							"fr.univcotedazur.l3ia.LegoLanguage.Sensor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getRobotAccess().getCommaKeyword_12_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRobotAccess().getSensorSensorParserRuleCall_12_3_1_0());
						}
						lv_sensor_17_0=ruleSensor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRobotRule());
							}
							add(
								$current,
								"sensor",
								lv_sensor_17_0,
								"fr.univcotedazur.l3ia.LegoLanguage.Sensor");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_12_4());
			}
		)?
		(
			otherlv_19='port'
			{
				newLeafNode(otherlv_19, grammarAccess.getRobotAccess().getPortKeyword_13_0());
			}
			otherlv_20='{'
			{
				newLeafNode(otherlv_20, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_13_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getPortPortParserRuleCall_13_2_0());
					}
					lv_port_21_0=rulePort
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"port",
							lv_port_21_0,
							"fr.univcotedazur.l3ia.LegoLanguage.Port");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_22=','
				{
					newLeafNode(otherlv_22, grammarAccess.getRobotAccess().getCommaKeyword_13_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRobotAccess().getPortPortParserRuleCall_13_3_1_0());
						}
						lv_port_23_0=rulePort
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRobotRule());
							}
							add(
								$current,
								"port",
								lv_port_23_0,
								"fr.univcotedazur.l3ia.LegoLanguage.Port");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_24='}'
			{
				newLeafNode(otherlv_24, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_13_4());
			}
		)?
		(
			otherlv_25='actor'
			{
				newLeafNode(otherlv_25, grammarAccess.getRobotAccess().getActorKeyword_14_0());
			}
			otherlv_26='{'
			{
				newLeafNode(otherlv_26, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_14_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getActorActorParserRuleCall_14_2_0());
					}
					lv_actor_27_0=ruleActor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"actor",
							lv_actor_27_0,
							"fr.univcotedazur.l3ia.LegoLanguage.Actor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_28=','
				{
					newLeafNode(otherlv_28, grammarAccess.getRobotAccess().getCommaKeyword_14_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRobotAccess().getActorActorParserRuleCall_14_3_1_0());
						}
						lv_actor_29_0=ruleActor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRobotRule());
							}
							add(
								$current,
								"actor",
								lv_actor_29_0,
								"fr.univcotedazur.l3ia.LegoLanguage.Actor");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_30='}'
			{
				newLeafNode(otherlv_30, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_14_4());
			}
		)?
		(
			otherlv_31='action'
			{
				newLeafNode(otherlv_31, grammarAccess.getRobotAccess().getActionKeyword_15_0());
			}
			otherlv_32='{'
			{
				newLeafNode(otherlv_32, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_15_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getActionActionParserRuleCall_15_2_0());
					}
					lv_action_33_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"action",
							lv_action_33_0,
							"fr.univcotedazur.l3ia.LegoLanguage.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_34=','
				{
					newLeafNode(otherlv_34, grammarAccess.getRobotAccess().getCommaKeyword_15_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRobotAccess().getActionActionParserRuleCall_15_3_1_0());
						}
						lv_action_35_0=ruleAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRobotRule());
							}
							add(
								$current,
								"action",
								lv_action_35_0,
								"fr.univcotedazur.l3ia.LegoLanguage.Action");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_36='}'
			{
				newLeafNode(otherlv_36, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_15_4());
			}
		)?
		otherlv_37='}'
		{
			newLeafNode(otherlv_37, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_16());
		}
	)
;

// Entry rule entryRuleMotor_Impl
entryRuleMotor_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMotor_ImplRule()); }
	iv_ruleMotor_Impl=ruleMotor_Impl
	{ $current=$iv_ruleMotor_Impl.current; }
	EOF;

// Rule Motor_Impl
ruleMotor_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMotor_ImplAccess().getMotorAction_0(),
					$current);
			}
		)
		otherlv_1='Motor'
		{
			newLeafNode(otherlv_1, grammarAccess.getMotor_ImplAccess().getMotorKeyword_1());
		}
	)
;

// Entry rule entryRuleLeftMotor
entryRuleLeftMotor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLeftMotorRule()); }
	iv_ruleLeftMotor=ruleLeftMotor
	{ $current=$iv_ruleLeftMotor.current; }
	EOF;

// Rule LeftMotor
ruleLeftMotor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLeftMotorAccess().getLeftMotorAction_0(),
					$current);
			}
		)
		otherlv_1='LeftMotor'
		{
			newLeafNode(otherlv_1, grammarAccess.getLeftMotorAccess().getLeftMotorKeyword_1());
		}
	)
;

// Entry rule entryRuleRightMotor
entryRuleRightMotor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRightMotorRule()); }
	iv_ruleRightMotor=ruleRightMotor
	{ $current=$iv_ruleRightMotor.current; }
	EOF;

// Rule RightMotor
ruleRightMotor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRightMotorAccess().getRightMotorAction_0(),
					$current);
			}
		)
		otherlv_1='RightMotor'
		{
			newLeafNode(otherlv_1, grammarAccess.getRightMotorAccess().getRightMotorKeyword_1());
		}
	)
;

// Entry rule entryRuleSensor_Impl
entryRuleSensor_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensor_ImplRule()); }
	iv_ruleSensor_Impl=ruleSensor_Impl
	{ $current=$iv_ruleSensor_Impl.current; }
	EOF;

// Rule Sensor_Impl
ruleSensor_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSensor_ImplAccess().getSensorAction_0(),
					$current);
			}
		)
		otherlv_1='Sensor'
		{
			newLeafNode(otherlv_1, grammarAccess.getSensor_ImplAccess().getSensorKeyword_1());
		}
	)
;

// Entry rule entryRulePort
entryRulePort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	iv_rulePort=rulePort
	{ $current=$iv_rulePort.current; }
	EOF;

// Rule Port
rulePort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPortAccess().getPortAction_0(),
					$current);
			}
		)
		otherlv_1='Port'
		{
			newLeafNode(otherlv_1, grammarAccess.getPortAccess().getPortKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.univcotedazur.l3ia.LegoLanguage.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleColorSensor
entryRuleColorSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorSensorRule()); }
	iv_ruleColorSensor=ruleColorSensor
	{ $current=$iv_ruleColorSensor.current; }
	EOF;

// Rule ColorSensor
ruleColorSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getColorSensorAccess().getColorSensorAction_0(),
					$current);
			}
		)
		otherlv_1='ColorSensor'
		{
			newLeafNode(otherlv_1, grammarAccess.getColorSensorAccess().getColorSensorKeyword_1());
		}
	)
;

// Entry rule entryRulePositionSensor
entryRulePositionSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPositionSensorRule()); }
	iv_rulePositionSensor=rulePositionSensor
	{ $current=$iv_rulePositionSensor.current; }
	EOF;

// Rule PositionSensor
rulePositionSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPositionSensorAccess().getPositionSensorAction_0(),
					$current);
			}
		)
		otherlv_1='PositionSensor'
		{
			newLeafNode(otherlv_1, grammarAccess.getPositionSensorAccess().getPositionSensorKeyword_1());
		}
	)
;

// Entry rule entryRuleGo
entryRuleGo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoRule()); }
	iv_ruleGo=ruleGo
	{ $current=$iv_ruleGo.current; }
	EOF;

// Rule Go
ruleGo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGoAccess().getGoAction_0(),
					$current);
			}
		)
		otherlv_1='Go'
		{
			newLeafNode(otherlv_1, grammarAccess.getGoAccess().getGoKeyword_1());
		}
	)
;

// Entry rule entryRuleRight
entryRuleRight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRightRule()); }
	iv_ruleRight=ruleRight
	{ $current=$iv_ruleRight.current; }
	EOF;

// Rule Right
ruleRight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRightAccess().getRightAction_0(),
					$current);
			}
		)
		otherlv_1='Right'
		{
			newLeafNode(otherlv_1, grammarAccess.getRightAccess().getRightKeyword_1());
		}
	)
;

// Entry rule entryRuleLeft
entryRuleLeft returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLeftRule()); }
	iv_ruleLeft=ruleLeft
	{ $current=$iv_ruleLeft.current; }
	EOF;

// Rule Left
ruleLeft returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLeftAccess().getLeftAction_0(),
					$current);
			}
		)
		otherlv_1='Left'
		{
			newLeafNode(otherlv_1, grammarAccess.getLeftAccess().getLeftKeyword_1());
		}
	)
;

// Entry rule entryRuleContinue
entryRuleContinue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContinueRule()); }
	iv_ruleContinue=ruleContinue
	{ $current=$iv_ruleContinue.current; }
	EOF;

// Rule Continue
ruleContinue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getContinueAccess().getContinueAction_0(),
					$current);
			}
		)
		otherlv_1='Continue'
		{
			newLeafNode(otherlv_1, grammarAccess.getContinueAccess().getContinueKeyword_1());
		}
	)
;

// Entry rule entryRuleBack
entryRuleBack returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackRule()); }
	iv_ruleBack=ruleBack
	{ $current=$iv_ruleBack.current; }
	EOF;

// Rule Back
ruleBack returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBackAccess().getBackAction_0(),
					$current);
			}
		)
		otherlv_1='Back'
		{
			newLeafNode(otherlv_1, grammarAccess.getBackAccess().getBackKeyword_1());
		}
	)
;

// Entry rule entryRuleShutDown
entryRuleShutDown returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShutDownRule()); }
	iv_ruleShutDown=ruleShutDown
	{ $current=$iv_ruleShutDown.current; }
	EOF;

// Rule ShutDown
ruleShutDown returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getShutDownAccess().getShutDownAction_0(),
					$current);
			}
		)
		otherlv_1='ShutDown'
		{
			newLeafNode(otherlv_1, grammarAccess.getShutDownAccess().getShutDownKeyword_1());
		}
	)
;

// Entry rule entryRuleDown
entryRuleDown returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDownRule()); }
	iv_ruleDown=ruleDown
	{ $current=$iv_ruleDown.current; }
	EOF;

// Rule Down
ruleDown returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDownAccess().getDownAction_0(),
					$current);
			}
		)
		otherlv_1='Down'
		{
			newLeafNode(otherlv_1, grammarAccess.getDownAccess().getDownKeyword_1());
		}
	)
;

// Entry rule entryRuleRotate
entryRuleRotate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotateRule()); }
	iv_ruleRotate=ruleRotate
	{ $current=$iv_ruleRotate.current; }
	EOF;

// Rule Rotate
ruleRotate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRotateAccess().getRotateAction_0(),
					$current);
			}
		)
		otherlv_1='Rotate'
		{
			newLeafNode(otherlv_1, grammarAccess.getRotateAccess().getRotateKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
