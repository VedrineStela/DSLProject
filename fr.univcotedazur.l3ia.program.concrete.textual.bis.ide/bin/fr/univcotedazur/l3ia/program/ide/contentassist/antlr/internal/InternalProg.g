/*
 * generated by Xtext 2.25.0
 */
grammar InternalProg;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package fr.univcotedazur.l3ia.program.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.univcotedazur.l3ia.program.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.univcotedazur.l3ia.program.services.ProgGrammarAccess;

}
@parser::members {
	private ProgGrammarAccess grammarAccess;

	public void setGrammarAccess(ProgGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceToColor
entryRuleReferenceToColor
:
{ before(grammarAccess.getReferenceToColorRule()); }
	 ruleReferenceToColor
{ after(grammarAccess.getReferenceToColorRule()); } 
	 EOF 
;

// Rule ReferenceToColor
ruleReferenceToColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceToColorAccess().getGroup()); }
		(rule__ReferenceToColor__Group__0)
		{ after(grammarAccess.getReferenceToColorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getAlternatives()); }
		(rule__Sensor__Alternatives)
		{ after(grammarAccess.getSensorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActions
entryRuleActions
:
{ before(grammarAccess.getActionsRule()); }
	 ruleActions
{ after(grammarAccess.getActionsRule()); } 
	 EOF 
;

// Rule Actions
ruleActions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionsAccess().getAlternatives()); }
		(rule__Actions__Alternatives)
		{ after(grammarAccess.getActionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMoteur
entryRuleMoteur
:
{ before(grammarAccess.getMoteurRule()); }
	 ruleMoteur
{ after(grammarAccess.getMoteurRule()); } 
	 EOF 
;

// Rule Moteur
ruleMoteur 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoteurAccess().getAlternatives()); }
		(rule__Moteur__Alternatives)
		{ after(grammarAccess.getMoteurAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurnOn
entryRuleTurnOn
:
{ before(grammarAccess.getTurnOnRule()); }
	 ruleTurnOn
{ after(grammarAccess.getTurnOnRule()); } 
	 EOF 
;

// Rule TurnOn
ruleTurnOn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurnOnAccess().getGroup()); }
		(rule__TurnOn__Group__0)
		{ after(grammarAccess.getTurnOnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAccelerate
entryRuleAccelerate
:
{ before(grammarAccess.getAccelerateRule()); }
	 ruleAccelerate
{ after(grammarAccess.getAccelerateRule()); } 
	 EOF 
;

// Rule Accelerate
ruleAccelerate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAccelerateAccess().getGroup()); }
		(rule__Accelerate__Group__0)
		{ after(grammarAccess.getAccelerateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftRotation
entryRuleLeftRotation
:
{ before(grammarAccess.getLeftRotationRule()); }
	 ruleLeftRotation
{ after(grammarAccess.getLeftRotationRule()); } 
	 EOF 
;

// Rule LeftRotation
ruleLeftRotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftRotationAccess().getGroup()); }
		(rule__LeftRotation__Group__0)
		{ after(grammarAccess.getLeftRotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightRotation
entryRuleRightRotation
:
{ before(grammarAccess.getRightRotationRule()); }
	 ruleRightRotation
{ after(grammarAccess.getRightRotationRule()); } 
	 EOF 
;

// Rule RightRotation
ruleRightRotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightRotationAccess().getGroup()); }
		(rule__RightRotation__Group__0)
		{ after(grammarAccess.getRightRotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFQN
entryRuleFQN
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFQNAccess().getGroup()); }
		(rule__FQN__Group__0)
		{ after(grammarAccess.getFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnForRotation
entryRuleOnForRotation
:
{ before(grammarAccess.getOnForRotationRule()); }
	 ruleOnForRotation
{ after(grammarAccess.getOnForRotationRule()); } 
	 EOF 
;

// Rule OnForRotation
ruleOnForRotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnForRotationAccess().getGroup()); }
		(rule__OnForRotation__Group__0)
		{ after(grammarAccess.getOnForRotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStop
entryRuleStop
:
{ before(grammarAccess.getStopRule()); }
	 ruleStop
{ after(grammarAccess.getStopRule()); } 
	 EOF 
;

// Rule Stop
ruleStop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStopAccess().getGroup()); }
		(rule__Stop__Group__0)
		{ after(grammarAccess.getStopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftMotor
entryRuleLeftMotor
:
{ before(grammarAccess.getLeftMotorRule()); }
	 ruleLeftMotor
{ after(grammarAccess.getLeftMotorRule()); } 
	 EOF 
;

// Rule LeftMotor
ruleLeftMotor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftMotorAccess().getGroup()); }
		(rule__LeftMotor__Group__0)
		{ after(grammarAccess.getLeftMotorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightMotor
entryRuleRightMotor
:
{ before(grammarAccess.getRightMotorRule()); }
	 ruleRightMotor
{ after(grammarAccess.getRightMotorRule()); } 
	 EOF 
;

// Rule RightMotor
ruleRightMotor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightMotorAccess().getGroup()); }
		(rule__RightMotor__Group__0)
		{ after(grammarAccess.getRightMotorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInfraredSensor
entryRuleInfraredSensor
:
{ before(grammarAccess.getInfraredSensorRule()); }
	 ruleInfraredSensor
{ after(grammarAccess.getInfraredSensorRule()); } 
	 EOF 
;

// Rule InfraredSensor
ruleInfraredSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInfraredSensorAccess().getGroup()); }
		(rule__InfraredSensor__Group__0)
		{ after(grammarAccess.getInfraredSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGyroSensor
entryRuleGyroSensor
:
{ before(grammarAccess.getGyroSensorRule()); }
	 ruleGyroSensor
{ after(grammarAccess.getGyroSensorRule()); } 
	 EOF 
;

// Rule GyroSensor
ruleGyroSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGyroSensorAccess().getGroup()); }
		(rule__GyroSensor__Group__0)
		{ after(grammarAccess.getGyroSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGPSSensor
entryRuleGPSSensor
:
{ before(grammarAccess.getGPSSensorRule()); }
	 ruleGPSSensor
{ after(grammarAccess.getGPSSensorRule()); } 
	 EOF 
;

// Rule GPSSensor
ruleGPSSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGPSSensorAccess().getGroup()); }
		(rule__GPSSensor__Group__0)
		{ after(grammarAccess.getGPSSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLightSensor
entryRuleLightSensor
:
{ before(grammarAccess.getLightSensorRule()); }
	 ruleLightSensor
{ after(grammarAccess.getLightSensorRule()); } 
	 EOF 
;

// Rule LightSensor
ruleLightSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLightSensorAccess().getGroup()); }
		(rule__LightSensor__Group__0)
		{ after(grammarAccess.getLightSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUltrasonicSensor
entryRuleUltrasonicSensor
:
{ before(grammarAccess.getUltrasonicSensorRule()); }
	 ruleUltrasonicSensor
{ after(grammarAccess.getUltrasonicSensorRule()); } 
	 EOF 
;

// Rule UltrasonicSensor
ruleUltrasonicSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUltrasonicSensorAccess().getGroup()); }
		(rule__UltrasonicSensor__Group__0)
		{ after(grammarAccess.getUltrasonicSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColorSensor
entryRuleColorSensor
:
{ before(grammarAccess.getColorSensorRule()); }
	 ruleColorSensor
{ after(grammarAccess.getColorSensorRule()); } 
	 EOF 
;

// Rule ColorSensor
ruleColorSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorSensorAccess().getGroup()); }
		(rule__ColorSensor__Group__0)
		{ after(grammarAccess.getColorSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePositionSensor
entryRulePositionSensor
:
{ before(grammarAccess.getPositionSensorRule()); }
	 rulePositionSensor
{ after(grammarAccess.getPositionSensorRule()); } 
	 EOF 
;

// Rule PositionSensor
rulePositionSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositionSensorAccess().getGroup()); }
		(rule__PositionSensor__Group__0)
		{ after(grammarAccess.getPositionSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntensitySensor
entryRuleIntensitySensor
:
{ before(grammarAccess.getIntensitySensorRule()); }
	 ruleIntensitySensor
{ after(grammarAccess.getIntensitySensorRule()); } 
	 EOF 
;

// Rule IntensitySensor
ruleIntensitySensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntensitySensorAccess().getGroup()); }
		(rule__IntensitySensor__Group__0)
		{ after(grammarAccess.getIntensitySensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getGroup()); }
		(rule__Move__Group__0)
		{ after(grammarAccess.getMoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMoveLeft
entryRuleMoveLeft
:
{ before(grammarAccess.getMoveLeftRule()); }
	 ruleMoveLeft
{ after(grammarAccess.getMoveLeftRule()); } 
	 EOF 
;

// Rule MoveLeft
ruleMoveLeft 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveLeftAccess().getGroup()); }
		(rule__MoveLeft__Group__0)
		{ after(grammarAccess.getMoveLeftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetThank
entryRuleSetThank
:
{ before(grammarAccess.getSetThankRule()); }
	 ruleSetThank
{ after(grammarAccess.getSetThankRule()); } 
	 EOF 
;

// Rule SetThank
ruleSetThank 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetThankAccess().getGroup()); }
		(rule__SetThank__Group__0)
		{ after(grammarAccess.getSetThankAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionMotor
entryRuleConditionMotor
:
{ before(grammarAccess.getConditionMotorRule()); }
	 ruleConditionMotor
{ after(grammarAccess.getConditionMotorRule()); } 
	 EOF 
;

// Rule ConditionMotor
ruleConditionMotor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionMotorAccess().getAlternatives()); }
		(rule__ConditionMotor__Alternatives)
		{ after(grammarAccess.getConditionMotorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanOperationsOnMotors
entryRuleBooleanOperationsOnMotors
:
{ before(grammarAccess.getBooleanOperationsOnMotorsRule()); }
	 ruleBooleanOperationsOnMotors
{ after(grammarAccess.getBooleanOperationsOnMotorsRule()); } 
	 EOF 
;

// Rule BooleanOperationsOnMotors
ruleBooleanOperationsOnMotors 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanOperationsOnMotorsAccess().getAlternatives()); }
		(rule__BooleanOperationsOnMotors__Alternatives)
		{ after(grammarAccess.getBooleanOperationsOnMotorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGreatherThanM
entryRuleGreatherThanM
:
{ before(grammarAccess.getGreatherThanMRule()); }
	 ruleGreatherThanM
{ after(grammarAccess.getGreatherThanMRule()); } 
	 EOF 
;

// Rule GreatherThanM
ruleGreatherThanM 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGreatherThanMAccess().getGroup()); }
		(rule__GreatherThanM__Group__0)
		{ after(grammarAccess.getGreatherThanMAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualM
entryRuleEqualM
:
{ before(grammarAccess.getEqualMRule()); }
	 ruleEqualM
{ after(grammarAccess.getEqualMRule()); } 
	 EOF 
;

// Rule EqualM
ruleEqualM 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualMAccess().getGroup()); }
		(rule__EqualM__Group__0)
		{ after(grammarAccess.getEqualMAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfMotor
entryRuleIfMotor
:
{ before(grammarAccess.getIfMotorRule()); }
	 ruleIfMotor
{ after(grammarAccess.getIfMotorRule()); } 
	 EOF 
;

// Rule IfMotor
ruleIfMotor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfMotorAccess().getGroup()); }
		(rule__IfMotor__Group__0)
		{ after(grammarAccess.getIfMotorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseMotor
entryRuleElseMotor
:
{ before(grammarAccess.getElseMotorRule()); }
	 ruleElseMotor
{ after(grammarAccess.getElseMotorRule()); } 
	 EOF 
;

// Rule ElseMotor
ruleElseMotor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseMotorAccess().getGroup()); }
		(rule__ElseMotor__Group__0)
		{ after(grammarAccess.getElseMotorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReference
entryRuleReference
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceAccess().getVariableRefParserRuleCall()); }
		ruleVariableRef
		{ after(grammarAccess.getReferenceAccess().getVariableRefParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColorRef
entryRuleColorRef
:
{ before(grammarAccess.getColorRefRule()); }
	 ruleColorRef
{ after(grammarAccess.getColorRefRule()); } 
	 EOF 
;

// Rule ColorRef
ruleColorRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorRefAccess().getReferencetocolorAssignment()); }
		(rule__ColorRef__ReferencetocolorAssignment)
		{ after(grammarAccess.getColorRefAccess().getReferencetocolorAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfCondition
entryRuleIfCondition
:
{ before(grammarAccess.getIfConditionRule()); }
	 ruleIfCondition
{ after(grammarAccess.getIfConditionRule()); } 
	 EOF 
;

// Rule IfCondition
ruleIfCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfConditionAccess().getGroup()); }
		(rule__IfCondition__Group__0)
		{ after(grammarAccess.getIfConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement_Impl
entryRuleStatement_Impl
:
{ before(grammarAccess.getStatement_ImplRule()); }
	 ruleStatement_Impl
{ after(grammarAccess.getStatement_ImplRule()); } 
	 EOF 
;

// Rule Statement_Impl
ruleStatement_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatement_ImplAccess().getGroup()); }
		(rule__Statement_Impl__Group__0)
		{ after(grammarAccess.getStatement_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileLoop
entryRuleWhileLoop
:
{ before(grammarAccess.getWhileLoopRule()); }
	 ruleWhileLoop
{ after(grammarAccess.getWhileLoopRule()); } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileLoopAccess().getGroup()); }
		(rule__WhileLoop__Group__0)
		{ after(grammarAccess.getWhileLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableRef
entryRuleVariableRef
:
{ before(grammarAccess.getVariableRefRule()); }
	 ruleVariableRef
{ after(grammarAccess.getVariableRefRule()); } 
	 EOF 
;

// Rule VariableRef
ruleVariableRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableRefAccess().getVariableAssignment()); }
		(rule__VariableRef__VariableAssignment)
		{ after(grammarAccess.getVariableRefAccess().getVariableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison_Impl
entryRuleComparison_Impl
:
{ before(grammarAccess.getComparison_ImplRule()); }
	 ruleComparison_Impl
{ after(grammarAccess.getComparison_ImplRule()); } 
	 EOF 
;

// Rule Comparison_Impl
ruleComparison_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparison_ImplAccess().getGroup()); }
		(rule__Comparison_Impl__Group__0)
		{ after(grammarAccess.getComparison_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubstraction
entryRuleSubstraction
:
{ before(grammarAccess.getSubstractionRule()); }
	 ruleSubstraction
{ after(grammarAccess.getSubstractionRule()); } 
	 EOF 
;

// Rule Substraction
ruleSubstraction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubstractionAccess().getGroup()); }
		(rule__Substraction__Group__0)
		{ after(grammarAccess.getSubstractionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGreaterThan
entryRuleGreaterThan
:
{ before(grammarAccess.getGreaterThanRule()); }
	 ruleGreaterThan
{ after(grammarAccess.getGreaterThanRule()); } 
	 EOF 
;

// Rule GreaterThan
ruleGreaterThan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGreaterThanAccess().getGroup()); }
		(rule__GreaterThan__Group__0)
		{ after(grammarAccess.getGreaterThanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLowerThan
entryRuleLowerThan
:
{ before(grammarAccess.getLowerThanRule()); }
	 ruleLowerThan
{ after(grammarAccess.getLowerThanRule()); } 
	 EOF 
;

// Rule LowerThan
ruleLowerThan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLowerThanAccess().getGroup()); }
		(rule__LowerThan__Group__0)
		{ after(grammarAccess.getLowerThanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqual
entryRuleEqual
:
{ before(grammarAccess.getEqualRule()); }
	 ruleEqual
{ after(grammarAccess.getEqualRule()); } 
	 EOF 
;

// Rule Equal
ruleEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualAccess().getGroup()); }
		(rule__Equal__Group__0)
		{ after(grammarAccess.getEqualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForLoop
entryRuleForLoop
:
{ before(grammarAccess.getForLoopRule()); }
	 ruleForLoop
{ after(grammarAccess.getForLoopRule()); } 
	 EOF 
;

// Rule ForLoop
ruleForLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForLoopAccess().getGroup()); }
		(rule__ForLoop__Group__0)
		{ after(grammarAccess.getForLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplication
entryRuleMultiplication
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
		(rule__Multiplication__Group__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDivision
entryRuleDivision
:
{ before(grammarAccess.getDivisionRule()); }
	 ruleDivision
{ after(grammarAccess.getDivisionRule()); } 
	 EOF 
;

// Rule Division
ruleDivision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDivisionAccess().getGroup()); }
		(rule__Division__Group__0)
		{ after(grammarAccess.getDivisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getIntensitySensorParserRuleCall_0()); }
		ruleIntensitySensor
		{ after(grammarAccess.getSensorAccess().getIntensitySensorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getColorSensorParserRuleCall_1()); }
		ruleColorSensor
		{ after(grammarAccess.getSensorAccess().getColorSensorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getPositionSensorParserRuleCall_2()); }
		rulePositionSensor
		{ after(grammarAccess.getSensorAccess().getPositionSensorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getInfraredSensorParserRuleCall_3()); }
		ruleInfraredSensor
		{ after(grammarAccess.getSensorAccess().getInfraredSensorParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getGyroSensorParserRuleCall_4()); }
		ruleGyroSensor
		{ after(grammarAccess.getSensorAccess().getGyroSensorParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getGPSSensorParserRuleCall_5()); }
		ruleGPSSensor
		{ after(grammarAccess.getSensorAccess().getGPSSensorParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getLightSensorParserRuleCall_6()); }
		ruleLightSensor
		{ after(grammarAccess.getSensorAccess().getLightSensorParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getUltrasonicSensorParserRuleCall_7()); }
		ruleUltrasonicSensor
		{ after(grammarAccess.getSensorAccess().getUltrasonicSensorParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getStopParserRuleCall_0()); }
		ruleStop
		{ after(grammarAccess.getActionsAccess().getStopParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getOnForRotationParserRuleCall_1()); }
		ruleOnForRotation
		{ after(grammarAccess.getActionsAccess().getOnForRotationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getAccelerateParserRuleCall_2()); }
		ruleAccelerate
		{ after(grammarAccess.getActionsAccess().getAccelerateParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getTurnOnParserRuleCall_3()); }
		ruleTurnOn
		{ after(grammarAccess.getActionsAccess().getTurnOnParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Moteur__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoteurAccess().getLeftMotorParserRuleCall_0()); }
		ruleLeftMotor
		{ after(grammarAccess.getMoteurAccess().getLeftMotorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMoteurAccess().getRightMotorParserRuleCall_1()); }
		ruleRightMotor
		{ after(grammarAccess.getMoteurAccess().getRightMotorParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getConditionMotorParserRuleCall_0()); }
		ruleConditionMotor
		{ after(grammarAccess.getStatementAccess().getConditionMotorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfMotorParserRuleCall_1()); }
		ruleIfMotor
		{ after(grammarAccess.getStatementAccess().getIfMotorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfConditionParserRuleCall_2()); }
		ruleIfCondition
		{ after(grammarAccess.getStatementAccess().getIfConditionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getStatement_ImplParserRuleCall_3()); }
		ruleStatement_Impl
		{ after(grammarAccess.getStatementAccess().getStatement_ImplParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAccelerateParserRuleCall_4()); }
		ruleAccelerate
		{ after(grammarAccess.getStatementAccess().getAccelerateParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getStopParserRuleCall_5()); }
		ruleStop
		{ after(grammarAccess.getStatementAccess().getStopParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getOnForRotationParserRuleCall_6()); }
		ruleOnForRotation
		{ after(grammarAccess.getStatementAccess().getOnForRotationParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getMoveParserRuleCall_7()); }
		ruleMove
		{ after(grammarAccess.getStatementAccess().getMoveParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getMoveLeftParserRuleCall_8()); }
		ruleMoveLeft
		{ after(grammarAccess.getStatementAccess().getMoveLeftParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSetThankParserRuleCall_9()); }
		ruleSetThank
		{ after(grammarAccess.getStatementAccess().getSetThankParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLeftRotationParserRuleCall_10()); }
		ruleLeftRotation
		{ after(grammarAccess.getStatementAccess().getLeftRotationParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRightRotationParserRuleCall_11()); }
		ruleRightRotation
		{ after(grammarAccess.getStatementAccess().getRightRotationParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_12()); }
		ruleWhileLoop
		{ after(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_13()); }
		ruleAssignment
		{ after(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getComparison_ImplParserRuleCall_14()); }
		ruleComparison_Impl
		{ after(grammarAccess.getStatementAccess().getComparison_ImplParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSubstractionParserRuleCall_15()); }
		ruleSubstraction
		{ after(grammarAccess.getStatementAccess().getSubstractionParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGreaterThanParserRuleCall_16()); }
		ruleGreaterThan
		{ after(grammarAccess.getStatementAccess().getGreaterThanParserRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLowerThanParserRuleCall_17()); }
		ruleLowerThan
		{ after(grammarAccess.getStatementAccess().getLowerThanParserRuleCall_17()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getEqualParserRuleCall_18()); }
		ruleEqual
		{ after(grammarAccess.getStatementAccess().getEqualParserRuleCall_18()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForLoopParserRuleCall_19()); }
		ruleForLoop
		{ after(grammarAccess.getStatementAccess().getForLoopParserRuleCall_19()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAdditionParserRuleCall_20()); }
		ruleAddition
		{ after(grammarAccess.getStatementAccess().getAdditionParserRuleCall_20()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getMultiplicationParserRuleCall_21()); }
		ruleMultiplication
		{ after(grammarAccess.getStatementAccess().getMultiplicationParserRuleCall_21()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDivisionParserRuleCall_22()); }
		ruleDivision
		{ after(grammarAccess.getStatementAccess().getDivisionParserRuleCall_22()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getActionsParserRuleCall_23()); }
		ruleActions
		{ after(grammarAccess.getStatementAccess().getActionsParserRuleCall_23()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionMotor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionMotorAccess().getIfMotorParserRuleCall_0()); }
		ruleIfMotor
		{ after(grammarAccess.getConditionMotorAccess().getIfMotorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionMotorAccess().getElseMotorParserRuleCall_1()); }
		ruleElseMotor
		{ after(grammarAccess.getConditionMotorAccess().getElseMotorParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationsOnMotors__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOperationsOnMotorsAccess().getEqualMParserRuleCall_0()); }
		ruleEqualM
		{ after(grammarAccess.getBooleanOperationsOnMotorsAccess().getEqualMParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanOperationsOnMotorsAccess().getGreatherThanMParserRuleCall_1()); }
		ruleGreatherThanM
		{ after(grammarAccess.getBooleanOperationsOnMotorsAccess().getGreatherThanMParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getReferenceParserRuleCall_0()); }
		ruleReference
		{ after(grammarAccess.getExpressionAccess().getReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall_1()); }
		ruleAssignment
		{ after(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getComparison_ImplParserRuleCall_2()); }
		ruleComparison_Impl
		{ after(grammarAccess.getExpressionAccess().getComparison_ImplParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSubstractionParserRuleCall_3()); }
		ruleSubstraction
		{ after(grammarAccess.getExpressionAccess().getSubstractionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGreaterThanParserRuleCall_4()); }
		ruleGreaterThan
		{ after(grammarAccess.getExpressionAccess().getGreaterThanParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getLowerThanParserRuleCall_5()); }
		ruleLowerThan
		{ after(grammarAccess.getExpressionAccess().getLowerThanParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getEqualParserRuleCall_6()); }
		ruleEqual
		{ after(grammarAccess.getExpressionAccess().getEqualParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getAdditionParserRuleCall_7()); }
		ruleAddition
		{ after(grammarAccess.getExpressionAccess().getAdditionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getMultiplicationParserRuleCall_8()); }
		ruleMultiplication
		{ after(grammarAccess.getExpressionAccess().getMultiplicationParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getDivisionParserRuleCall_9()); }
		ruleDivision
		{ after(grammarAccess.getExpressionAccess().getDivisionParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramAction_0()); }
	()
	{ after(grammarAccess.getProgramAccess().getProgramAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramKeyword_1()); }
	'Program'
	{ after(grammarAccess.getProgramAccess().getProgramKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_2()); }
	(rule__Program__NameAssignment_2)
	{ after(grammarAccess.getProgramAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRobotAssignment_3()); }
	(rule__Program__RobotAssignment_3)*
	{ after(grammarAccess.getProgramAccess().getRobotAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getVariableAssignment_4()); }
	(rule__Program__VariableAssignment_4)*
	{ after(grammarAccess.getProgramAccess().getVariableAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__5__Impl
	rule__Program__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getReferencetocolorAssignment_5()); }
	(rule__Program__ReferencetocolorAssignment_5)*
	{ after(grammarAccess.getProgramAccess().getReferencetocolorAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getStatementAssignment_6()); }
	(rule__Program__StatementAssignment_6)*
	{ after(grammarAccess.getProgramAccess().getStatementAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceToColor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceToColor__Group__0__Impl
	rule__ReferenceToColor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceToColorAccess().getReferenceToColorAction_0()); }
	()
	{ after(grammarAccess.getReferenceToColorAccess().getReferenceToColorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceToColor__Group__1__Impl
	rule__ReferenceToColor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceToColorAccess().getRefKeyword_1()); }
	'ref'
	{ after(grammarAccess.getReferenceToColorAccess().getRefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceToColor__Group__2__Impl
	rule__ReferenceToColor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceToColorAccess().getNameAssignment_2()); }
	(rule__ReferenceToColor__NameAssignment_2)
	{ after(grammarAccess.getReferenceToColorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceToColor__Group__3__Impl
	rule__ReferenceToColor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceToColorAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getReferenceToColorAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceToColor__Group__4__Impl
	rule__ReferenceToColor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceToColorAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getReferenceToColorAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceToColor__Group__5__Impl
	rule__ReferenceToColor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceToColorAccess().getColorsensorAssignment_5()); }
	(rule__ReferenceToColor__ColorsensorAssignment_5)
	{ after(grammarAccess.getReferenceToColorAccess().getColorsensorAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceToColor__Group__6__Impl
	rule__ReferenceToColor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceToColorAccess().getColor_nameKeyword_6()); }
	'color_name'
	{ after(grammarAccess.getReferenceToColorAccess().getColor_nameKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceToColor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceToColorAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getReferenceToColorAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotKeyword_0()); }
	'Robot'
	{ after(grammarAccess.getRobotAccess().getRobotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getNameAssignment_1()); }
	(rule__Robot__NameAssignment_1)
	{ after(grammarAccess.getRobotAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__3__Impl
	rule__Robot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getMoteurAssignment_3()); }
	(rule__Robot__MoteurAssignment_3)*
	{ after(grammarAccess.getRobotAccess().getMoteurAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__4__Impl
	rule__Robot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getSensorAssignment_4()); }
	(rule__Robot__SensorAssignment_4)*
	{ after(grammarAccess.getRobotAccess().getSensorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurnOn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnOn__Group__0__Impl
	rule__TurnOn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnOnAccess().getTurnOnKeyword_0()); }
	'turnOn'
	{ after(grammarAccess.getTurnOnAccess().getTurnOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnOn__Group__1__Impl
	rule__TurnOn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnOnAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTurnOnAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnOn__Group__2__Impl
	rule__TurnOn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnOnAccess().getMoteurAssignment_2()); }
	(rule__TurnOn__MoteurAssignment_2)
	{ after(grammarAccess.getTurnOnAccess().getMoteurAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnOn__Group__3__Impl
	rule__TurnOn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnOnAccess().getGroup_3()); }
	(rule__TurnOn__Group_3__0)?
	{ after(grammarAccess.getTurnOnAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnOn__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnOnAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTurnOnAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurnOn__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnOn__Group_3__0__Impl
	rule__TurnOn__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnOnAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTurnOnAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnOn__Group_3__1__Impl
	rule__TurnOn__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnOnAccess().getGroup_3_1()); }
	(rule__TurnOn__Group_3_1__0)?
	{ after(grammarAccess.getTurnOnAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnOn__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnOnAccess().getSpeedAssignment_3_2()); }
	(rule__TurnOn__SpeedAssignment_3_2)
	{ after(grammarAccess.getTurnOnAccess().getSpeedAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurnOn__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnOn__Group_3_1__0__Impl
	rule__TurnOn__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnOnAccess().getSpeedKeyword_3_1_0()); }
	'speed'
	{ after(grammarAccess.getTurnOnAccess().getSpeedKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnOn__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnOnAccess().getEqualsSignKeyword_3_1_1()); }
	'='
	{ after(grammarAccess.getTurnOnAccess().getEqualsSignKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Accelerate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group__0__Impl
	rule__Accelerate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getAccelerateKeyword_0()); }
	'accelerate'
	{ after(grammarAccess.getAccelerateAccess().getAccelerateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group__1__Impl
	rule__Accelerate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAccelerateAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group__2__Impl
	rule__Accelerate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getMoteurAssignment_2()); }
	(rule__Accelerate__MoteurAssignment_2)
	{ after(grammarAccess.getAccelerateAccess().getMoteurAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group__3__Impl
	rule__Accelerate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getGroup_3()); }
	(rule__Accelerate__Group_3__0)?
	{ after(grammarAccess.getAccelerateAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group__4__Impl
	rule__Accelerate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getGroup_4()); }
	(rule__Accelerate__Group_4__0)?
	{ after(grammarAccess.getAccelerateAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAccelerateAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Accelerate__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group_3__0__Impl
	rule__Accelerate__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getAccelerateAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group_3__1__Impl
	rule__Accelerate__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getGroup_3_1()); }
	(rule__Accelerate__Group_3_1__0)?
	{ after(grammarAccess.getAccelerateAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getSpeedAssignment_3_2()); }
	(rule__Accelerate__SpeedAssignment_3_2)
	{ after(grammarAccess.getAccelerateAccess().getSpeedAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Accelerate__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group_3_1__0__Impl
	rule__Accelerate__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getSpeedKeyword_3_1_0()); }
	'speed'
	{ after(grammarAccess.getAccelerateAccess().getSpeedKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getEqualsSignKeyword_3_1_1()); }
	'='
	{ after(grammarAccess.getAccelerateAccess().getEqualsSignKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Accelerate__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group_4__0__Impl
	rule__Accelerate__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getAccelerateAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group_4__1__Impl
	rule__Accelerate__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getGroup_4_1()); }
	(rule__Accelerate__Group_4_1__0)?
	{ after(grammarAccess.getAccelerateAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getDurationAssignment_4_2()); }
	(rule__Accelerate__DurationAssignment_4_2)
	{ after(grammarAccess.getAccelerateAccess().getDurationAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Accelerate__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group_4_1__0__Impl
	rule__Accelerate__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getSecondsKeyword_4_1_0()); }
	'seconds'
	{ after(grammarAccess.getAccelerateAccess().getSecondsKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Accelerate__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccelerateAccess().getEqualsSignKeyword_4_1_1()); }
	'='
	{ after(grammarAccess.getAccelerateAccess().getEqualsSignKeyword_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftRotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group__0__Impl
	rule__LeftRotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getTurnLeftKeyword_0()); }
	'turnLeft'
	{ after(grammarAccess.getLeftRotationAccess().getTurnLeftKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group__1__Impl
	rule__LeftRotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLeftRotationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group__2__Impl
	rule__LeftRotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getLeftmotorAssignment_2()); }
	(rule__LeftRotation__LeftmotorAssignment_2)
	{ after(grammarAccess.getLeftRotationAccess().getLeftmotorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group__3__Impl
	rule__LeftRotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getLeftRotationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group__4__Impl
	rule__LeftRotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getRightmotorAssignment_4()); }
	(rule__LeftRotation__RightmotorAssignment_4)
	{ after(grammarAccess.getLeftRotationAccess().getRightmotorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group__5__Impl
	rule__LeftRotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getGroup_5()); }
	(rule__LeftRotation__Group_5__0)?
	{ after(grammarAccess.getLeftRotationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group__6__Impl
	rule__LeftRotation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getGroup_6()); }
	(rule__LeftRotation__Group_6__0)?
	{ after(grammarAccess.getLeftRotationAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getLeftRotationAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftRotation__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group_5__0__Impl
	rule__LeftRotation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getLeftRotationAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group_5__1__Impl
	rule__LeftRotation__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getGroup_5_1()); }
	(rule__LeftRotation__Group_5_1__0)?
	{ after(grammarAccess.getLeftRotationAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getAngleAssignment_5_2()); }
	(rule__LeftRotation__AngleAssignment_5_2)
	{ after(grammarAccess.getLeftRotationAccess().getAngleAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftRotation__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group_5_1__0__Impl
	rule__LeftRotation__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getAngleKeyword_5_1_0()); }
	'angle'
	{ after(grammarAccess.getLeftRotationAccess().getAngleKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getEqualsSignKeyword_5_1_1()); }
	'='
	{ after(grammarAccess.getLeftRotationAccess().getEqualsSignKeyword_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftRotation__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group_6__0__Impl
	rule__LeftRotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getLeftRotationAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group_6__1__Impl
	rule__LeftRotation__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getGroup_6_1()); }
	(rule__LeftRotation__Group_6_1__0)?
	{ after(grammarAccess.getLeftRotationAccess().getGroup_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getDurationAssignment_6_2()); }
	(rule__LeftRotation__DurationAssignment_6_2)
	{ after(grammarAccess.getLeftRotationAccess().getDurationAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftRotation__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group_6_1__0__Impl
	rule__LeftRotation__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getSecondsKeyword_6_1_0()); }
	'seconds'
	{ after(grammarAccess.getLeftRotationAccess().getSecondsKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRotation__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRotationAccess().getEqualsSignKeyword_6_1_1()); }
	'='
	{ after(grammarAccess.getLeftRotationAccess().getEqualsSignKeyword_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightRotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group__0__Impl
	rule__RightRotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getTurnRightKeyword_0()); }
	'turnRight'
	{ after(grammarAccess.getRightRotationAccess().getTurnRightKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group__1__Impl
	rule__RightRotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRightRotationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group__2__Impl
	rule__RightRotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getLeftmotorAssignment_2()); }
	(rule__RightRotation__LeftmotorAssignment_2)
	{ after(grammarAccess.getRightRotationAccess().getLeftmotorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group__3__Impl
	rule__RightRotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getRightRotationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group__4__Impl
	rule__RightRotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getRightmotorAssignment_4()); }
	(rule__RightRotation__RightmotorAssignment_4)
	{ after(grammarAccess.getRightRotationAccess().getRightmotorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group__5__Impl
	rule__RightRotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getGroup_5()); }
	(rule__RightRotation__Group_5__0)?
	{ after(grammarAccess.getRightRotationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group__6__Impl
	rule__RightRotation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getGroup_6()); }
	(rule__RightRotation__Group_6__0)?
	{ after(grammarAccess.getRightRotationAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getRightRotationAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightRotation__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group_5__0__Impl
	rule__RightRotation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getRightRotationAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group_5__1__Impl
	rule__RightRotation__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getGroup_5_1()); }
	(rule__RightRotation__Group_5_1__0)?
	{ after(grammarAccess.getRightRotationAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getAngleAssignment_5_2()); }
	(rule__RightRotation__AngleAssignment_5_2)
	{ after(grammarAccess.getRightRotationAccess().getAngleAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightRotation__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group_5_1__0__Impl
	rule__RightRotation__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getAngleKeyword_5_1_0()); }
	'angle'
	{ after(grammarAccess.getRightRotationAccess().getAngleKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getEqualsSignKeyword_5_1_1()); }
	'='
	{ after(grammarAccess.getRightRotationAccess().getEqualsSignKeyword_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightRotation__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group_6__0__Impl
	rule__RightRotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getRightRotationAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group_6__1__Impl
	rule__RightRotation__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getGroup_6_1()); }
	(rule__RightRotation__Group_6_1__0)?
	{ after(grammarAccess.getRightRotationAccess().getGroup_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getDurationAssignment_6_2()); }
	(rule__RightRotation__DurationAssignment_6_2)
	{ after(grammarAccess.getRightRotationAccess().getDurationAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightRotation__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group_6_1__0__Impl
	rule__RightRotation__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getSecondsKeyword_6_1_0()); }
	'seconds'
	{ after(grammarAccess.getRightRotationAccess().getSecondsKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightRotation__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightRotationAccess().getEqualsSignKeyword_6_1_1()); }
	'='
	{ after(grammarAccess.getRightRotationAccess().getEqualsSignKeyword_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_1()); }
	(rule__FQN__Group_1__0)*
	{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OnForRotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnForRotation__Group__0__Impl
	rule__OnForRotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnForRotationAccess().getOnForRotationKeyword_0()); }
	'onForRotation'
	{ after(grammarAccess.getOnForRotationAccess().getOnForRotationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnForRotation__Group__1__Impl
	rule__OnForRotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnForRotationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOnForRotationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnForRotation__Group__2__Impl
	rule__OnForRotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnForRotationAccess().getMoteurAssignment_2()); }
	(rule__OnForRotation__MoteurAssignment_2)
	{ after(grammarAccess.getOnForRotationAccess().getMoteurAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnForRotation__Group__3__Impl
	rule__OnForRotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnForRotationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getOnForRotationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnForRotation__Group__4__Impl
	rule__OnForRotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnForRotationAccess().getSpeedAssignment_4()); }
	(rule__OnForRotation__SpeedAssignment_4)
	{ after(grammarAccess.getOnForRotationAccess().getSpeedAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnForRotation__Group__5__Impl
	rule__OnForRotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnForRotationAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getOnForRotationAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnForRotation__Group__6__Impl
	rule__OnForRotation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnForRotationAccess().getAngleAssignment_6()); }
	(rule__OnForRotation__AngleAssignment_6)
	{ after(grammarAccess.getOnForRotationAccess().getAngleAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnForRotation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnForRotationAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getOnForRotationAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__0__Impl
	rule__Stop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getStopKeyword_0()); }
	'stop'
	{ after(grammarAccess.getStopAccess().getStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__1__Impl
	rule__Stop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getStopAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__2__Impl
	rule__Stop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getMoteurAssignment_2()); }
	(rule__Stop__MoteurAssignment_2)
	{ after(grammarAccess.getStopAccess().getMoteurAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getStopAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftMotor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftMotor__Group__0__Impl
	rule__LeftMotor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftMotorAccess().getLeftMotorKeyword_0()); }
	'leftMotor'
	{ after(grammarAccess.getLeftMotorAccess().getLeftMotorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftMotor__Group__1__Impl
	rule__LeftMotor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftMotorAccess().getNameAssignment_1()); }
	(rule__LeftMotor__NameAssignment_1)
	{ after(grammarAccess.getLeftMotorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftMotor__Group__2__Impl
	rule__LeftMotor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftMotorAccess().getGroup_2()); }
	(rule__LeftMotor__Group_2__0)?
	{ after(grammarAccess.getLeftMotorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftMotor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftMotorAccess().getGroup_3()); }
	(rule__LeftMotor__Group_3__0)
	{ after(grammarAccess.getLeftMotorAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftMotor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftMotor__Group_2__0__Impl
	rule__LeftMotor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftMotorAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getLeftMotorAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftMotor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftMotorAccess().getInitialSpeedAssignment_2_1()); }
	(rule__LeftMotor__InitialSpeedAssignment_2_1)
	{ after(grammarAccess.getLeftMotorAccess().getInitialSpeedAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftMotor__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftMotor__Group_3__0__Impl
	rule__LeftMotor__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftMotorAccess().getOnKeyword_3_0()); }
	'on'
	{ after(grammarAccess.getLeftMotorAccess().getOnKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftMotor__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftMotorAccess().getPortAssignment_3_1()); }
	(rule__LeftMotor__PortAssignment_3_1)
	{ after(grammarAccess.getLeftMotorAccess().getPortAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightMotor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightMotor__Group__0__Impl
	rule__RightMotor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightMotorAccess().getRightMotorKeyword_0()); }
	'rightMotor'
	{ after(grammarAccess.getRightMotorAccess().getRightMotorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightMotor__Group__1__Impl
	rule__RightMotor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightMotorAccess().getNameAssignment_1()); }
	(rule__RightMotor__NameAssignment_1)
	{ after(grammarAccess.getRightMotorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightMotor__Group__2__Impl
	rule__RightMotor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightMotorAccess().getGroup_2()); }
	(rule__RightMotor__Group_2__0)?
	{ after(grammarAccess.getRightMotorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightMotor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightMotorAccess().getGroup_3()); }
	(rule__RightMotor__Group_3__0)
	{ after(grammarAccess.getRightMotorAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightMotor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightMotor__Group_2__0__Impl
	rule__RightMotor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightMotorAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getRightMotorAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightMotor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightMotorAccess().getInitialSpeedAssignment_2_1()); }
	(rule__RightMotor__InitialSpeedAssignment_2_1)
	{ after(grammarAccess.getRightMotorAccess().getInitialSpeedAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightMotor__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightMotor__Group_3__0__Impl
	rule__RightMotor__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightMotorAccess().getOnKeyword_3_0()); }
	'on'
	{ after(grammarAccess.getRightMotorAccess().getOnKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightMotor__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightMotorAccess().getPortAssignment_3_1()); }
	(rule__RightMotor__PortAssignment_3_1)
	{ after(grammarAccess.getRightMotorAccess().getPortAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfraredSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfraredSensor__Group__0__Impl
	rule__InfraredSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfraredSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfraredSensorAccess().getInfraredSensorKeyword_0()); }
	'infraredSensor'
	{ after(grammarAccess.getInfraredSensorAccess().getInfraredSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfraredSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfraredSensor__Group__1__Impl
	rule__InfraredSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfraredSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfraredSensorAccess().getNameAssignment_1()); }
	(rule__InfraredSensor__NameAssignment_1)
	{ after(grammarAccess.getInfraredSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfraredSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfraredSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfraredSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfraredSensorAccess().getGroup_2()); }
	(rule__InfraredSensor__Group_2__0)
	{ after(grammarAccess.getInfraredSensorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfraredSensor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfraredSensor__Group_2__0__Impl
	rule__InfraredSensor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfraredSensor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfraredSensorAccess().getOnKeyword_2_0()); }
	'on'
	{ after(grammarAccess.getInfraredSensorAccess().getOnKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfraredSensor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfraredSensor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfraredSensor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfraredSensorAccess().getSensorPortAssignment_2_1()); }
	(rule__InfraredSensor__SensorPortAssignment_2_1)
	{ after(grammarAccess.getInfraredSensorAccess().getSensorPortAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GyroSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GyroSensor__Group__0__Impl
	rule__GyroSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGyroSensorAccess().getGyroSensorKeyword_0()); }
	'gyroSensor'
	{ after(grammarAccess.getGyroSensorAccess().getGyroSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GyroSensor__Group__1__Impl
	rule__GyroSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGyroSensorAccess().getNameAssignment_1()); }
	(rule__GyroSensor__NameAssignment_1)
	{ after(grammarAccess.getGyroSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GyroSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGyroSensorAccess().getGroup_2()); }
	(rule__GyroSensor__Group_2__0)
	{ after(grammarAccess.getGyroSensorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GyroSensor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GyroSensor__Group_2__0__Impl
	rule__GyroSensor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGyroSensorAccess().getOnKeyword_2_0()); }
	'on'
	{ after(grammarAccess.getGyroSensorAccess().getOnKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GyroSensor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGyroSensorAccess().getSensorPortAssignment_2_1()); }
	(rule__GyroSensor__SensorPortAssignment_2_1)
	{ after(grammarAccess.getGyroSensorAccess().getSensorPortAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GPSSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GPSSensor__Group__0__Impl
	rule__GPSSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGPSSensorAccess().getGpsSensorKeyword_0()); }
	'gpsSensor'
	{ after(grammarAccess.getGPSSensorAccess().getGpsSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GPSSensor__Group__1__Impl
	rule__GPSSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGPSSensorAccess().getNameAssignment_1()); }
	(rule__GPSSensor__NameAssignment_1)
	{ after(grammarAccess.getGPSSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GPSSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGPSSensorAccess().getGroup_2()); }
	(rule__GPSSensor__Group_2__0)
	{ after(grammarAccess.getGPSSensorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GPSSensor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GPSSensor__Group_2__0__Impl
	rule__GPSSensor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGPSSensorAccess().getOnKeyword_2_0()); }
	'on'
	{ after(grammarAccess.getGPSSensorAccess().getOnKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GPSSensor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGPSSensorAccess().getSensorPortAssignment_2_1()); }
	(rule__GPSSensor__SensorPortAssignment_2_1)
	{ after(grammarAccess.getGPSSensorAccess().getSensorPortAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LightSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightSensor__Group__0__Impl
	rule__LightSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LightSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightSensorAccess().getLightSensorKeyword_0()); }
	'lightSensor'
	{ after(grammarAccess.getLightSensorAccess().getLightSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightSensor__Group__1__Impl
	rule__LightSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LightSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightSensorAccess().getNameAssignment_1()); }
	(rule__LightSensor__NameAssignment_1)
	{ after(grammarAccess.getLightSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LightSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightSensorAccess().getGroup_2()); }
	(rule__LightSensor__Group_2__0)
	{ after(grammarAccess.getLightSensorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LightSensor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightSensor__Group_2__0__Impl
	rule__LightSensor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LightSensor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightSensorAccess().getOnKeyword_2_0()); }
	'on'
	{ after(grammarAccess.getLightSensorAccess().getOnKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightSensor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LightSensor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LightSensor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightSensorAccess().getSensorPortAssignment_2_1()); }
	(rule__LightSensor__SensorPortAssignment_2_1)
	{ after(grammarAccess.getLightSensorAccess().getSensorPortAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UltrasonicSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UltrasonicSensor__Group__0__Impl
	rule__UltrasonicSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UltrasonicSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltrasonicSensorAccess().getUltrasonicSensorKeyword_0()); }
	'ultrasonicSensor'
	{ after(grammarAccess.getUltrasonicSensorAccess().getUltrasonicSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UltrasonicSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UltrasonicSensor__Group__1__Impl
	rule__UltrasonicSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UltrasonicSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltrasonicSensorAccess().getNameAssignment_1()); }
	(rule__UltrasonicSensor__NameAssignment_1)
	{ after(grammarAccess.getUltrasonicSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UltrasonicSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UltrasonicSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UltrasonicSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltrasonicSensorAccess().getGroup_2()); }
	(rule__UltrasonicSensor__Group_2__0)
	{ after(grammarAccess.getUltrasonicSensorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UltrasonicSensor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UltrasonicSensor__Group_2__0__Impl
	rule__UltrasonicSensor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UltrasonicSensor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltrasonicSensorAccess().getOnKeyword_2_0()); }
	'on'
	{ after(grammarAccess.getUltrasonicSensorAccess().getOnKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UltrasonicSensor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UltrasonicSensor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UltrasonicSensor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltrasonicSensorAccess().getSensorPortAssignment_2_1()); }
	(rule__UltrasonicSensor__SensorPortAssignment_2_1)
	{ after(grammarAccess.getUltrasonicSensorAccess().getSensorPortAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColorSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorSensor__Group__0__Impl
	rule__ColorSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorSensorAccess().getColorSensorKeyword_0()); }
	'colorSensor'
	{ after(grammarAccess.getColorSensorAccess().getColorSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorSensor__Group__1__Impl
	rule__ColorSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorSensorAccess().getNameAssignment_1()); }
	(rule__ColorSensor__NameAssignment_1)
	{ after(grammarAccess.getColorSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorSensorAccess().getGroup_2()); }
	(rule__ColorSensor__Group_2__0)
	{ after(grammarAccess.getColorSensorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColorSensor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorSensor__Group_2__0__Impl
	rule__ColorSensor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorSensorAccess().getOnKeyword_2_0()); }
	'on'
	{ after(grammarAccess.getColorSensorAccess().getOnKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorSensor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorSensorAccess().getSensorPortAssignment_2_1()); }
	(rule__ColorSensor__SensorPortAssignment_2_1)
	{ after(grammarAccess.getColorSensorAccess().getSensorPortAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PositionSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionSensor__Group__0__Impl
	rule__PositionSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionSensorAccess().getPositionSensorKeyword_0()); }
	'positionSensor'
	{ after(grammarAccess.getPositionSensorAccess().getPositionSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionSensor__Group__1__Impl
	rule__PositionSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionSensorAccess().getNameAssignment_1()); }
	(rule__PositionSensor__NameAssignment_1)
	{ after(grammarAccess.getPositionSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionSensorAccess().getGroup_2()); }
	(rule__PositionSensor__Group_2__0)?
	{ after(grammarAccess.getPositionSensorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PositionSensor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionSensor__Group_2__0__Impl
	rule__PositionSensor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionSensor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionSensorAccess().getOnKeyword_2_0()); }
	'on'
	{ after(grammarAccess.getPositionSensorAccess().getOnKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionSensor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositionSensor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionSensor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionSensorAccess().getSensorPortAssignment_2_1()); }
	(rule__PositionSensor__SensorPortAssignment_2_1)
	{ after(grammarAccess.getPositionSensorAccess().getSensorPortAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntensitySensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntensitySensor__Group__0__Impl
	rule__IntensitySensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensitySensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntensitySensorAccess().getIntensitySensorKeyword_0()); }
	'intensitySensor'
	{ after(grammarAccess.getIntensitySensorAccess().getIntensitySensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensitySensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntensitySensor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensitySensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntensitySensorAccess().getNameAssignment_1()); }
	(rule__IntensitySensor__NameAssignment_1)
	{ after(grammarAccess.getIntensitySensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__0__Impl
	rule__Move__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getMoveKeyword_0()); }
	'move'
	{ after(grammarAccess.getMoveAccess().getMoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__1__Impl
	rule__Move__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMoveAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__2__Impl
	rule__Move__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getLeftmotorAssignment_2()); }
	(rule__Move__LeftmotorAssignment_2)
	{ after(grammarAccess.getMoveAccess().getLeftmotorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__3__Impl
	rule__Move__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getMoveAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__4__Impl
	rule__Move__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getRightmotorAssignment_4()); }
	(rule__Move__RightmotorAssignment_4)
	{ after(grammarAccess.getMoveAccess().getRightmotorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__5__Impl
	rule__Move__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getMoveAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__6__Impl
	rule__Move__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getSpeedAssignment_6()); }
	(rule__Move__SpeedAssignment_6)
	{ after(grammarAccess.getMoveAccess().getSpeedAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getMoveAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoveLeft__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveLeft__Group__0__Impl
	rule__MoveLeft__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveLeftAccess().getMoveLeftKeyword_0()); }
	'moveLeft'
	{ after(grammarAccess.getMoveLeftAccess().getMoveLeftKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveLeft__Group__1__Impl
	rule__MoveLeft__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveLeftAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMoveLeftAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveLeft__Group__2__Impl
	rule__MoveLeft__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveLeftAccess().getLeftmotorAssignment_2()); }
	(rule__MoveLeft__LeftmotorAssignment_2)
	{ after(grammarAccess.getMoveLeftAccess().getLeftmotorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveLeft__Group__3__Impl
	rule__MoveLeft__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveLeftAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getMoveLeftAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveLeft__Group__4__Impl
	rule__MoveLeft__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveLeftAccess().getRightmotorAssignment_4()); }
	(rule__MoveLeft__RightmotorAssignment_4)
	{ after(grammarAccess.getMoveLeftAccess().getRightmotorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveLeft__Group__5__Impl
	rule__MoveLeft__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveLeftAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getMoveLeftAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveLeft__Group__6__Impl
	rule__MoveLeft__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveLeftAccess().getSpeedAssignment_6()); }
	(rule__MoveLeft__SpeedAssignment_6)
	{ after(grammarAccess.getMoveLeftAccess().getSpeedAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveLeft__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveLeftAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getMoveLeftAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetThank__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetThank__Group__0__Impl
	rule__SetThank__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetThankAccess().getSetThankKeyword_0()); }
	'setThank'
	{ after(grammarAccess.getSetThankAccess().getSetThankKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetThank__Group__1__Impl
	rule__SetThank__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetThankAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSetThankAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetThank__Group__2__Impl
	rule__SetThank__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetThankAccess().getLeftmotorAssignment_2()); }
	(rule__SetThank__LeftmotorAssignment_2)
	{ after(grammarAccess.getSetThankAccess().getLeftmotorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetThank__Group__3__Impl
	rule__SetThank__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetThankAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getSetThankAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetThank__Group__4__Impl
	rule__SetThank__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetThankAccess().getRightmotorAssignment_4()); }
	(rule__SetThank__RightmotorAssignment_4)
	{ after(grammarAccess.getSetThankAccess().getRightmotorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetThank__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetThankAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSetThankAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreatherThanM__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreatherThanM__Group__0__Impl
	rule__GreatherThanM__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreatherThanM__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreatherThanMAccess().getGreatherThanMAction_0()); }
	()
	{ after(grammarAccess.getGreatherThanMAccess().getGreatherThanMAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreatherThanM__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreatherThanM__Group__1__Impl
	rule__GreatherThanM__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GreatherThanM__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreatherThanMAccess().getLeftCAssignment_1()); }
	(rule__GreatherThanM__LeftCAssignment_1)
	{ after(grammarAccess.getGreatherThanMAccess().getLeftCAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreatherThanM__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreatherThanM__Group__2__Impl
	rule__GreatherThanM__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GreatherThanM__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreatherThanMAccess().getGreaterThanSignKeyword_2()); }
	'>'
	{ after(grammarAccess.getGreatherThanMAccess().getGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreatherThanM__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreatherThanM__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreatherThanM__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreatherThanMAccess().getRightCAssignment_3()); }
	(rule__GreatherThanM__RightCAssignment_3)
	{ after(grammarAccess.getGreatherThanMAccess().getRightCAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualM__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualM__Group__0__Impl
	rule__EqualM__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualM__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualMAccess().getEqualMAction_0()); }
	()
	{ after(grammarAccess.getEqualMAccess().getEqualMAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualM__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualM__Group__1__Impl
	rule__EqualM__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualM__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualMAccess().getLeftCAssignment_1()); }
	(rule__EqualM__LeftCAssignment_1)
	{ after(grammarAccess.getEqualMAccess().getLeftCAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualM__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualM__Group__2__Impl
	rule__EqualM__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualM__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualMAccess().getEqualsSignEqualsSignKeyword_2()); }
	'=='
	{ after(grammarAccess.getEqualMAccess().getEqualsSignEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualM__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualM__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualM__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualMAccess().getRightCAssignment_3()); }
	(rule__EqualM__RightCAssignment_3)
	{ after(grammarAccess.getEqualMAccess().getRightCAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfMotor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfMotor__Group__0__Impl
	rule__IfMotor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfMotorAccess().getIfMotorAction_0()); }
	()
	{ after(grammarAccess.getIfMotorAccess().getIfMotorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfMotor__Group__1__Impl
	rule__IfMotor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfMotorAccess().getIfMKeyword_1()); }
	'ifM'
	{ after(grammarAccess.getIfMotorAccess().getIfMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfMotor__Group__2__Impl
	rule__IfMotor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfMotorAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIfMotorAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfMotor__Group__3__Impl
	rule__IfMotor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfMotorAccess().getBoolMAssignment_3()); }
	(rule__IfMotor__BoolMAssignment_3)
	{ after(grammarAccess.getIfMotorAccess().getBoolMAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfMotor__Group__4__Impl
	rule__IfMotor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfMotorAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIfMotorAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfMotor__Group__5__Impl
	rule__IfMotor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfMotorAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getIfMotorAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfMotor__Group__6__Impl
	rule__IfMotor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfMotorAccess().getStatementAssignment_6()); }
	(rule__IfMotor__StatementAssignment_6)*
	{ after(grammarAccess.getIfMotorAccess().getStatementAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfMotor__Group__7__Impl
	rule__IfMotor__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfMotorAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getIfMotorAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfMotor__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfMotorAccess().getElsemotorAssignment_8()); }
	(rule__IfMotor__ElsemotorAssignment_8)*
	{ after(grammarAccess.getIfMotorAccess().getElsemotorAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseMotor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseMotor__Group__0__Impl
	rule__ElseMotor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseMotorAccess().getElseMotorAction_0()); }
	()
	{ after(grammarAccess.getElseMotorAccess().getElseMotorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseMotor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseMotorAccess().getGroup_1()); }
	(rule__ElseMotor__Group_1__0)
	{ after(grammarAccess.getElseMotorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseMotor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseMotor__Group_1__0__Impl
	rule__ElseMotor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseMotorAccess().getElseKeyword_1_0()); }
	'else'
	{ after(grammarAccess.getElseMotorAccess().getElseKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseMotor__Group_1__1__Impl
	rule__ElseMotor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseMotorAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getElseMotorAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseMotor__Group_1__2__Impl
	rule__ElseMotor__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseMotorAccess().getStatementAssignment_1_2()); }
	(rule__ElseMotor__StatementAssignment_1_2)*
	{ after(grammarAccess.getElseMotorAccess().getStatementAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseMotor__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseMotorAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getElseMotorAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__0__Impl
	rule__IfCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfConditionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__1__Impl
	rule__IfCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfConditionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__2__Impl
	rule__IfCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getExpressionAssignment_2()); }
	(rule__IfCondition__ExpressionAssignment_2)
	{ after(grammarAccess.getIfConditionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__3__Impl
	rule__IfCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfConditionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__4__Impl
	rule__IfCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getIfConditionAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__5__Impl
	rule__IfCondition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getStatementAssignment_5()); }
	(rule__IfCondition__StatementAssignment_5)*
	{ after(grammarAccess.getIfConditionAccess().getStatementAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__6__Impl
	rule__IfCondition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getIfConditionAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getGroup_7()); }
	(rule__IfCondition__Group_7__0)?
	{ after(grammarAccess.getIfConditionAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfCondition__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group_7__0__Impl
	rule__IfCondition__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getElseKeyword_7_0()); }
	'else'
	{ after(grammarAccess.getIfConditionAccess().getElseKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group_7__1__Impl
	rule__IfCondition__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getLeftCurlyBracketKeyword_7_1()); }
	'{'
	{ after(grammarAccess.getIfConditionAccess().getLeftCurlyBracketKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group_7__2__Impl
	rule__IfCondition__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getStatementAssignment_7_2()); }
	(rule__IfCondition__StatementAssignment_7_2)*
	{ after(grammarAccess.getIfConditionAccess().getStatementAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getRightCurlyBracketKeyword_7_3()); }
	'}'
	{ after(grammarAccess.getIfConditionAccess().getRightCurlyBracketKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableAction_0()); }
	()
	{ after(grammarAccess.getVariableAccess().getVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getIsConstAssignment_1()); }
	(rule__Variable__IsConstAssignment_1)?
	{ after(grammarAccess.getVariableAccess().getIsConstAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableKeyword_2()); }
	'Variable'
	{ after(grammarAccess.getVariableAccess().getVariableKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_3()); }
	(rule__Variable__NameAssignment_3)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__4__Impl
	rule__Variable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getInitialValueAssignment_5()); }
	(rule__Variable__InitialValueAssignment_5)?
	{ after(grammarAccess.getVariableAccess().getInitialValueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement_Impl__Group__0__Impl
	rule__Statement_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatement_ImplAccess().getStatementAction_0()); }
	()
	{ after(grammarAccess.getStatement_ImplAccess().getStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement_Impl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatement_ImplAccess().getStatementKeyword_1()); }
	'Statement'
	{ after(grammarAccess.getStatement_ImplAccess().getStatementKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__0__Impl
	rule__WhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__1__Impl
	rule__WhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getExpressionAssignment_1()); }
	(rule__WhileLoop__ExpressionAssignment_1)
	{ after(grammarAccess.getWhileLoopAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__2__Impl
	rule__WhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__3__Impl
	rule__WhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getStatementAssignment_3()); }
	(rule__WhileLoop__StatementAssignment_3)*
	{ after(grammarAccess.getWhileLoopAccess().getStatementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getAssignmentAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getLeftAssignment_1()); }
	(rule__Assignment__LeftAssignment_1)
	{ after(grammarAccess.getAssignmentAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_2()); }
	':='
	{ after(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__3__Impl
	rule__Assignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getRightAssignment_3()); }
	(rule__Assignment__RightAssignment_3)
	{ after(grammarAccess.getAssignmentAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAssignmentAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison_Impl__Group__0__Impl
	rule__Comparison_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparison_ImplAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getComparison_ImplAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison_Impl__Group__1__Impl
	rule__Comparison_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparison_ImplAccess().getLeftAssignment_1()); }
	(rule__Comparison_Impl__LeftAssignment_1)
	{ after(grammarAccess.getComparison_ImplAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison_Impl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison_Impl__Group__2__Impl
	rule__Comparison_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison_Impl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparison_ImplAccess().getRightAssignment_2()); }
	(rule__Comparison_Impl__RightAssignment_2)
	{ after(grammarAccess.getComparison_ImplAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison_Impl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison_Impl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison_Impl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparison_ImplAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getComparison_ImplAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Substraction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__0__Impl
	rule__Substraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getSubstractionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__1__Impl
	rule__Substraction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getLeftAssignment_1()); }
	(rule__Substraction__LeftAssignment_1)
	{ after(grammarAccess.getSubstractionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__2__Impl
	rule__Substraction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getHyphenMinusKeyword_2()); }
	'-'
	{ after(grammarAccess.getSubstractionAccess().getHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__3__Impl
	rule__Substraction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getRightAssignment_3()); }
	(rule__Substraction__RightAssignment_3)
	{ after(grammarAccess.getSubstractionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getSubstractionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreaterThan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__0__Impl
	rule__GreaterThan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getGreaterThanAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__1__Impl
	rule__GreaterThan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getLeftAssignment_1()); }
	(rule__GreaterThan__LeftAssignment_1)
	{ after(grammarAccess.getGreaterThanAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__2__Impl
	rule__GreaterThan__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getGreaterThanSignKeyword_2()); }
	'>'
	{ after(grammarAccess.getGreaterThanAccess().getGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__3__Impl
	rule__GreaterThan__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getRightAssignment_3()); }
	(rule__GreaterThan__RightAssignment_3)
	{ after(grammarAccess.getGreaterThanAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreaterThan__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreaterThanAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getGreaterThanAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LowerThan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerThan__Group__0__Impl
	rule__LowerThan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerThanAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getLowerThanAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerThan__Group__1__Impl
	rule__LowerThan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerThanAccess().getLeftAssignment_1()); }
	(rule__LowerThan__LeftAssignment_1)
	{ after(grammarAccess.getLowerThanAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerThan__Group__2__Impl
	rule__LowerThan__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerThanAccess().getLessThanSignKeyword_2()); }
	'<'
	{ after(grammarAccess.getLowerThanAccess().getLessThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerThan__Group__3__Impl
	rule__LowerThan__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerThanAccess().getRightAssignment_3()); }
	(rule__LowerThan__RightAssignment_3)
	{ after(grammarAccess.getLowerThanAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerThan__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerThanAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getLowerThanAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__0__Impl
	rule__Equal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getEqualAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__1__Impl
	rule__Equal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getLeftAssignment_1()); }
	(rule__Equal__LeftAssignment_1)
	{ after(grammarAccess.getEqualAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__2__Impl
	rule__Equal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getEqualsSignEqualsSignKeyword_2()); }
	'=='
	{ after(grammarAccess.getEqualAccess().getEqualsSignEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__3__Impl
	rule__Equal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getRightAssignment_3()); }
	(rule__Equal__RightAssignment_3)
	{ after(grammarAccess.getEqualAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getEqualAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__0__Impl
	rule__ForLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForLoopAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__1__Impl
	rule__ForLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getExpressionAssignment_1()); }
	(rule__ForLoop__ExpressionAssignment_1)
	{ after(grammarAccess.getForLoopAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__2__Impl
	rule__ForLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__3__Impl
	rule__ForLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getStatementAssignment_3()); }
	(rule__ForLoop__StatementAssignment_3)*
	{ after(grammarAccess.getForLoopAccess().getStatementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
	rule__Addition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getLeftAssignment_1()); }
	(rule__Addition__LeftAssignment_1)
	{ after(grammarAccess.getAdditionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__2__Impl
	rule__Addition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_2()); }
	'+'
	{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__3__Impl
	rule__Addition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightAssignment_3()); }
	(rule__Addition__RightAssignment_3)
	{ after(grammarAccess.getAdditionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAdditionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getMultiplicationAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__1__Impl
	rule__Multiplication__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getLeftAssignment_1()); }
	(rule__Multiplication__LeftAssignment_1)
	{ after(grammarAccess.getMultiplicationAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__2__Impl
	rule__Multiplication__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_2()); }
	'*'
	{ after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__3__Impl
	rule__Multiplication__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_3()); }
	(rule__Multiplication__RightAssignment_3)
	{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMultiplicationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Division__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__0__Impl
	rule__Division__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getDivisionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__1__Impl
	rule__Division__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getLeftAssignment_1()); }
	(rule__Division__LeftAssignment_1)
	{ after(grammarAccess.getDivisionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__2__Impl
	rule__Division__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getSolidusKeyword_2()); }
	'/'
	{ after(grammarAccess.getDivisionAccess().getSolidusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__3__Impl
	rule__Division__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getRightAssignment_3()); }
	(rule__Division__RightAssignment_3)
	{ after(grammarAccess.getDivisionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDivisionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__RobotAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getRobotRobotParserRuleCall_3_0()); }
		ruleRobot
		{ after(grammarAccess.getProgramAccess().getRobotRobotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__VariableAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getVariableVariableParserRuleCall_4_0()); }
		ruleVariable
		{ after(grammarAccess.getProgramAccess().getVariableVariableParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ReferencetocolorAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getReferencetocolorReferenceToColorParserRuleCall_5_0()); }
		ruleReferenceToColor
		{ after(grammarAccess.getProgramAccess().getReferencetocolorReferenceToColorParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__StatementAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getStatementStatementParserRuleCall_6_0()); }
		ruleStatement
		{ after(grammarAccess.getProgramAccess().getStatementStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceToColorAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getReferenceToColorAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceToColor__ColorsensorAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceToColorAccess().getColorsensorColorSensorCrossReference_5_0()); }
		(
			{ before(grammarAccess.getReferenceToColorAccess().getColorsensorColorSensorFQNParserRuleCall_5_0_1()); }
			ruleFQN
			{ after(grammarAccess.getReferenceToColorAccess().getColorsensorColorSensorFQNParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getReferenceToColorAccess().getColorsensorColorSensorCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRobotAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__MoteurAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getMoteurMoteurParserRuleCall_3_0()); }
		ruleMoteur
		{ after(grammarAccess.getRobotAccess().getMoteurMoteurParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__SensorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getSensorSensorParserRuleCall_4_0()); }
		ruleSensor
		{ after(grammarAccess.getRobotAccess().getSensorSensorParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__MoteurAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnOnAccess().getMoteurMoteurCrossReference_2_0()); }
		(
			{ before(grammarAccess.getTurnOnAccess().getMoteurMoteurFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getTurnOnAccess().getMoteurMoteurFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getTurnOnAccess().getMoteurMoteurCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnOn__SpeedAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnOnAccess().getSpeedINTTerminalRuleCall_3_2_0()); }
		RULE_INT
		{ after(grammarAccess.getTurnOnAccess().getSpeedINTTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__MoteurAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccelerateAccess().getMoteurMoteurCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAccelerateAccess().getMoteurMoteurFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getAccelerateAccess().getMoteurMoteurFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAccelerateAccess().getMoteurMoteurCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__SpeedAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccelerateAccess().getSpeedINTTerminalRuleCall_3_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAccelerateAccess().getSpeedINTTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Accelerate__DurationAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccelerateAccess().getDurationINTTerminalRuleCall_4_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAccelerateAccess().getDurationINTTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__LeftmotorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftRotationAccess().getLeftmotorLeftMotorCrossReference_2_0()); }
		(
			{ before(grammarAccess.getLeftRotationAccess().getLeftmotorLeftMotorFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getLeftRotationAccess().getLeftmotorLeftMotorFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getLeftRotationAccess().getLeftmotorLeftMotorCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__RightmotorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftRotationAccess().getRightmotorRightMotorCrossReference_4_0()); }
		(
			{ before(grammarAccess.getLeftRotationAccess().getRightmotorRightMotorFQNParserRuleCall_4_0_1()); }
			ruleFQN
			{ after(grammarAccess.getLeftRotationAccess().getRightmotorRightMotorFQNParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getLeftRotationAccess().getRightmotorRightMotorCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__AngleAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftRotationAccess().getAngleINTTerminalRuleCall_5_2_0()); }
		RULE_INT
		{ after(grammarAccess.getLeftRotationAccess().getAngleINTTerminalRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRotation__DurationAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftRotationAccess().getDurationINTTerminalRuleCall_6_2_0()); }
		RULE_INT
		{ after(grammarAccess.getLeftRotationAccess().getDurationINTTerminalRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__LeftmotorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightRotationAccess().getLeftmotorLeftMotorCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRightRotationAccess().getLeftmotorLeftMotorFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getRightRotationAccess().getLeftmotorLeftMotorFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRightRotationAccess().getLeftmotorLeftMotorCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__RightmotorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightRotationAccess().getRightmotorRightMotorCrossReference_4_0()); }
		(
			{ before(grammarAccess.getRightRotationAccess().getRightmotorRightMotorFQNParserRuleCall_4_0_1()); }
			ruleFQN
			{ after(grammarAccess.getRightRotationAccess().getRightmotorRightMotorFQNParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getRightRotationAccess().getRightmotorRightMotorCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__AngleAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightRotationAccess().getAngleINTTerminalRuleCall_5_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRightRotationAccess().getAngleINTTerminalRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightRotation__DurationAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightRotationAccess().getDurationINTTerminalRuleCall_6_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRightRotationAccess().getDurationINTTerminalRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__MoteurAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnForRotationAccess().getMoteurMoteurCrossReference_2_0()); }
		(
			{ before(grammarAccess.getOnForRotationAccess().getMoteurMoteurFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getOnForRotationAccess().getMoteurMoteurFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getOnForRotationAccess().getMoteurMoteurCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__SpeedAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnForRotationAccess().getSpeedINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getOnForRotationAccess().getSpeedINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnForRotation__AngleAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnForRotationAccess().getAngleINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getOnForRotationAccess().getAngleINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__MoteurAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopAccess().getMoteurMoteurCrossReference_2_0()); }
		(
			{ before(grammarAccess.getStopAccess().getMoteurMoteurFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getStopAccess().getMoteurMoteurFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getStopAccess().getMoteurMoteurCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftMotorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLeftMotorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__InitialSpeedAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftMotorAccess().getInitialSpeedINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLeftMotorAccess().getInitialSpeedINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftMotor__PortAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftMotorAccess().getPortMOTORIDTerminalRuleCall_3_1_0()); }
		RULE_MOTORID
		{ after(grammarAccess.getLeftMotorAccess().getPortMOTORIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightMotorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRightMotorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__InitialSpeedAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightMotorAccess().getInitialSpeedINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getRightMotorAccess().getInitialSpeedINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightMotor__PortAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightMotorAccess().getPortMOTORIDTerminalRuleCall_3_1_0()); }
		RULE_MOTORID
		{ after(grammarAccess.getRightMotorAccess().getPortMOTORIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfraredSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfraredSensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInfraredSensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfraredSensor__SensorPortAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfraredSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getInfraredSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGyroSensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGyroSensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__SensorPortAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGyroSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getGyroSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGPSSensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGPSSensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__SensorPortAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGPSSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getGPSSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightSensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLightSensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LightSensor__SensorPortAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLightSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UltrasonicSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUltrasonicSensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUltrasonicSensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UltrasonicSensor__SensorPortAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUltrasonicSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getUltrasonicSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorSensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getColorSensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__SensorPortAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getColorSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionSensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPositionSensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionSensor__SensorPortAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPositionSensorAccess().getSensorPortINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensitySensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntensitySensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getIntensitySensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__LeftmotorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getLeftmotorLeftMotorCrossReference_2_0()); }
		(
			{ before(grammarAccess.getMoveAccess().getLeftmotorLeftMotorFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getMoveAccess().getLeftmotorLeftMotorFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getMoveAccess().getLeftmotorLeftMotorCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__RightmotorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getRightmotorRightMotorCrossReference_4_0()); }
		(
			{ before(grammarAccess.getMoveAccess().getRightmotorRightMotorFQNParserRuleCall_4_0_1()); }
			ruleFQN
			{ after(grammarAccess.getMoveAccess().getRightmotorRightMotorFQNParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getMoveAccess().getRightmotorRightMotorCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__SpeedAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getSpeedINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getMoveAccess().getSpeedINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__LeftmotorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveLeftAccess().getLeftmotorLeftMotorCrossReference_2_0()); }
		(
			{ before(grammarAccess.getMoveLeftAccess().getLeftmotorLeftMotorFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getMoveLeftAccess().getLeftmotorLeftMotorFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getMoveLeftAccess().getLeftmotorLeftMotorCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__RightmotorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveLeftAccess().getRightmotorRightMotorCrossReference_4_0()); }
		(
			{ before(grammarAccess.getMoveLeftAccess().getRightmotorRightMotorFQNParserRuleCall_4_0_1()); }
			ruleFQN
			{ after(grammarAccess.getMoveLeftAccess().getRightmotorRightMotorFQNParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getMoveLeftAccess().getRightmotorRightMotorCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveLeft__SpeedAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveLeftAccess().getSpeedINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getMoveLeftAccess().getSpeedINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__LeftmotorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetThankAccess().getLeftmotorLeftMotorCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSetThankAccess().getLeftmotorLeftMotorFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getSetThankAccess().getLeftmotorLeftMotorFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSetThankAccess().getLeftmotorLeftMotorCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetThank__RightmotorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetThankAccess().getRightmotorRightMotorCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSetThankAccess().getRightmotorRightMotorFQNParserRuleCall_4_0_1()); }
			ruleFQN
			{ after(grammarAccess.getSetThankAccess().getRightmotorRightMotorFQNParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSetThankAccess().getRightmotorRightMotorCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreatherThanM__LeftCAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreatherThanMAccess().getLeftCColorRefParserRuleCall_1_0()); }
		ruleColorRef
		{ after(grammarAccess.getGreatherThanMAccess().getLeftCColorRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreatherThanM__RightCAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreatherThanMAccess().getRightCVariableRefParserRuleCall_3_0()); }
		ruleVariableRef
		{ after(grammarAccess.getGreatherThanMAccess().getRightCVariableRefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualM__LeftCAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualMAccess().getLeftCColorRefParserRuleCall_1_0()); }
		ruleColorRef
		{ after(grammarAccess.getEqualMAccess().getLeftCColorRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualM__RightCAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualMAccess().getRightCVariableRefParserRuleCall_3_0()); }
		ruleVariableRef
		{ after(grammarAccess.getEqualMAccess().getRightCVariableRefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__BoolMAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfMotorAccess().getBoolMBooleanOperationsOnMotorsParserRuleCall_3_0()); }
		ruleBooleanOperationsOnMotors
		{ after(grammarAccess.getIfMotorAccess().getBoolMBooleanOperationsOnMotorsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__StatementAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfMotorAccess().getStatementStatementParserRuleCall_6_0()); }
		ruleStatement
		{ after(grammarAccess.getIfMotorAccess().getStatementStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfMotor__ElsemotorAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfMotorAccess().getElsemotorElseMotorParserRuleCall_8_0()); }
		ruleElseMotor
		{ after(grammarAccess.getIfMotorAccess().getElsemotorElseMotorParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseMotor__StatementAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseMotorAccess().getStatementStatementParserRuleCall_1_2_0()); }
		ruleStatement
		{ after(grammarAccess.getElseMotorAccess().getStatementStatementParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorRef__ReferencetocolorAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorRefAccess().getReferencetocolorReferenceToColorCrossReference_0()); }
		(
			{ before(grammarAccess.getColorRefAccess().getReferencetocolorReferenceToColorIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getColorRefAccess().getReferencetocolorReferenceToColorIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getColorRefAccess().getReferencetocolorReferenceToColorCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfConditionAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfConditionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__StatementAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfConditionAccess().getStatementStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getIfConditionAccess().getStatementStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__StatementAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfConditionAccess().getStatementStatementParserRuleCall_7_2_0()); }
		ruleStatement
		{ after(grammarAccess.getIfConditionAccess().getStatementStatementParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__IsConstAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getIsConstConstKeyword_1_0()); }
		(
			{ before(grammarAccess.getVariableAccess().getIsConstConstKeyword_1_0()); }
			'const'
			{ after(grammarAccess.getVariableAccess().getIsConstConstKeyword_1_0()); }
		)
		{ after(grammarAccess.getVariableAccess().getIsConstConstKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InitialValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getInitialValueINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getVariableAccess().getInitialValueINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileLoopAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__StatementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__VariableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableRefAccess().getVariableVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getVariableRefAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableRefAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVariableRefAccess().getVariableVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison_Impl__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparison_ImplAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getComparison_ImplAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison_Impl__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparison_ImplAccess().getRightExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getComparison_ImplAccess().getRightExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstractionAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSubstractionAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstractionAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getSubstractionAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreaterThanAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getGreaterThanAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreaterThan__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreaterThanAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getGreaterThanAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLowerThanAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getLowerThanAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerThan__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLowerThanAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getLowerThanAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEqualAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getEqualAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getForLoopAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__StatementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getStatementStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getForLoopAccess().getStatementStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAdditionAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getAdditionAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getMultiplicationAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getMultiplicationAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivisionAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getDivisionAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivisionAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getDivisionAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_MOTORID : 'A'..'H';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
