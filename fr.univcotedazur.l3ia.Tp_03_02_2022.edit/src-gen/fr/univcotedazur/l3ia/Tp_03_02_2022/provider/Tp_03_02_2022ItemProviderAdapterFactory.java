/**
 */
package fr.univcotedazur.l3ia.Tp_03_02_2022.provider;

import fr.univcotedazur.l3ia.Tp_03_02_2022.util.Tp_03_02_2022AdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Tp_03_02_2022ItemProviderAdapterFactory extends Tp_03_02_2022AdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Tp_03_02_2022ItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Program} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProgramItemProvider programItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Program}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProgramAdapter() {
		if (programItemProvider == null) {
			programItemProvider = new ProgramItemProvider(this);
		}

		return programItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Variable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableItemProvider variableItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Variable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableAdapter() {
		if (variableItemProvider == null) {
			variableItemProvider = new VariableItemProvider(this);
		}

		return variableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Statement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StatementItemProvider statementItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Statement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStatementAdapter() {
		if (statementItemProvider == null) {
			statementItemProvider = new StatementItemProvider(this);
		}

		return statementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.WhileLoop} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WhileLoopItemProvider whileLoopItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.WhileLoop}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWhileLoopAdapter() {
		if (whileLoopItemProvider == null) {
			whileLoopItemProvider = new WhileLoopItemProvider(this);
		}

		return whileLoopItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.VariableRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableRefItemProvider variableRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.VariableRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableRefAdapter() {
		if (variableRefItemProvider == null) {
			variableRefItemProvider = new VariableRefItemProvider(this);
		}

		return variableRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Assignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssignmentItemProvider assignmentItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Assignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssignmentAdapter() {
		if (assignmentItemProvider == null) {
			assignmentItemProvider = new AssignmentItemProvider(this);
		}

		return assignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Comparison} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComparisonItemProvider comparisonItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Comparison}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComparisonAdapter() {
		if (comparisonItemProvider == null) {
			comparisonItemProvider = new ComparisonItemProvider(this);
		}

		return comparisonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Substraction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubstractionItemProvider substractionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Substraction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubstractionAdapter() {
		if (substractionItemProvider == null) {
			substractionItemProvider = new SubstractionItemProvider(this);
		}

		return substractionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.GreaterThan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GreaterThanItemProvider greaterThanItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.GreaterThan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGreaterThanAdapter() {
		if (greaterThanItemProvider == null) {
			greaterThanItemProvider = new GreaterThanItemProvider(this);
		}

		return greaterThanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.LowerThan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LowerThanItemProvider lowerThanItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.LowerThan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLowerThanAdapter() {
		if (lowerThanItemProvider == null) {
			lowerThanItemProvider = new LowerThanItemProvider(this);
		}

		return lowerThanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Equal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqualItemProvider equalItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Equal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqualAdapter() {
		if (equalItemProvider == null) {
			equalItemProvider = new EqualItemProvider(this);
		}

		return equalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.ForLoop} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForLoopItemProvider forLoopItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.ForLoop}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForLoopAdapter() {
		if (forLoopItemProvider == null) {
			forLoopItemProvider = new ForLoopItemProvider(this);
		}

		return forLoopItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Addition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdditionItemProvider additionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Addition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdditionAdapter() {
		if (additionItemProvider == null) {
			additionItemProvider = new AdditionItemProvider(this);
		}

		return additionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Multiplication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiplicationItemProvider multiplicationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Multiplication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiplicationAdapter() {
		if (multiplicationItemProvider == null) {
			multiplicationItemProvider = new MultiplicationItemProvider(this);
		}

		return multiplicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Division} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DivisionItemProvider divisionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Division}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDivisionAdapter() {
		if (divisionItemProvider == null) {
			divisionItemProvider = new DivisionItemProvider(this);
		}

		return divisionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Robot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RobotItemProvider robotItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Robot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRobotAdapter() {
		if (robotItemProvider == null) {
			robotItemProvider = new RobotItemProvider(this);
		}

		return robotItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.LeftMotor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeftMotorItemProvider leftMotorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.LeftMotor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLeftMotorAdapter() {
		if (leftMotorItemProvider == null) {
			leftMotorItemProvider = new LeftMotorItemProvider(this);
		}

		return leftMotorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.RightMotor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RightMotorItemProvider rightMotorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.RightMotor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRightMotorAdapter() {
		if (rightMotorItemProvider == null) {
			rightMotorItemProvider = new RightMotorItemProvider(this);
		}

		return rightMotorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.ColorSensor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColorSensorItemProvider colorSensorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.ColorSensor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColorSensorAdapter() {
		if (colorSensorItemProvider == null) {
			colorSensorItemProvider = new ColorSensorItemProvider(this);
		}

		return colorSensorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.PositionSensor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PositionSensorItemProvider positionSensorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.PositionSensor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPositionSensorAdapter() {
		if (positionSensorItemProvider == null) {
			positionSensorItemProvider = new PositionSensorItemProvider(this);
		}

		return positionSensorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Accelerate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccelerateItemProvider accelerateItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Accelerate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccelerateAdapter() {
		if (accelerateItemProvider == null) {
			accelerateItemProvider = new AccelerateItemProvider(this);
		}

		return accelerateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.IntensitySensor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntensitySensorItemProvider intensitySensorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.IntensitySensor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntensitySensorAdapter() {
		if (intensitySensorItemProvider == null) {
			intensitySensorItemProvider = new IntensitySensorItemProvider(this);
		}

		return intensitySensorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Stop} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StopItemProvider stopItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Stop}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStopAdapter() {
		if (stopItemProvider == null) {
			stopItemProvider = new StopItemProvider(this);
		}

		return stopItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.TurnOn} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TurnOnItemProvider turnOnItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.TurnOn}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTurnOnAdapter() {
		if (turnOnItemProvider == null) {
			turnOnItemProvider = new TurnOnItemProvider(this);
		}

		return turnOnItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.LightSensor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LightSensorItemProvider lightSensorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.LightSensor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLightSensorAdapter() {
		if (lightSensorItemProvider == null) {
			lightSensorItemProvider = new LightSensorItemProvider(this);
		}

		return lightSensorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.InfraredSensor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InfraredSensorItemProvider infraredSensorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.InfraredSensor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInfraredSensorAdapter() {
		if (infraredSensorItemProvider == null) {
			infraredSensorItemProvider = new InfraredSensorItemProvider(this);
		}

		return infraredSensorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.GyroSensor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GyroSensorItemProvider gyroSensorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.GyroSensor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGyroSensorAdapter() {
		if (gyroSensorItemProvider == null) {
			gyroSensorItemProvider = new GyroSensorItemProvider(this);
		}

		return gyroSensorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.GPSSensor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GPSSensorItemProvider gpsSensorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.GPSSensor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGPSSensorAdapter() {
		if (gpsSensorItemProvider == null) {
			gpsSensorItemProvider = new GPSSensorItemProvider(this);
		}

		return gpsSensorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.UltrasonicSensor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UltrasonicSensorItemProvider ultrasonicSensorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.UltrasonicSensor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUltrasonicSensorAdapter() {
		if (ultrasonicSensorItemProvider == null) {
			ultrasonicSensorItemProvider = new UltrasonicSensorItemProvider(this);
		}

		return ultrasonicSensorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Move} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MoveItemProvider moveItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Move}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMoveAdapter() {
		if (moveItemProvider == null) {
			moveItemProvider = new MoveItemProvider(this);
		}

		return moveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.LeftRotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeftRotationItemProvider leftRotationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.LeftRotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLeftRotationAdapter() {
		if (leftRotationItemProvider == null) {
			leftRotationItemProvider = new LeftRotationItemProvider(this);
		}

		return leftRotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.RightRotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RightRotationItemProvider rightRotationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.RightRotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRightRotationAdapter() {
		if (rightRotationItemProvider == null) {
			rightRotationItemProvider = new RightRotationItemProvider(this);
		}

		return rightRotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.IfCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfConditionItemProvider ifConditionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.IfCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfConditionAdapter() {
		if (ifConditionItemProvider == null) {
			ifConditionItemProvider = new IfConditionItemProvider(this);
		}

		return ifConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.VarInt} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VarIntItemProvider varIntItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.VarInt}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVarIntAdapter() {
		if (varIntItemProvider == null) {
			varIntItemProvider = new VarIntItemProvider(this);
		}

		return varIntItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.VarrString} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VarrStringItemProvider varrStringItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.VarrString}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVarrStringAdapter() {
		if (varrStringItemProvider == null) {
			varrStringItemProvider = new VarrStringItemProvider(this);
		}

		return varrStringItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.ReferenceToColor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceToColorItemProvider referenceToColorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.ReferenceToColor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceToColorAdapter() {
		if (referenceToColorItemProvider == null) {
			referenceToColorItemProvider = new ReferenceToColorItemProvider(this);
		}

		return referenceToColorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.ColorRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColorRefItemProvider colorRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.ColorRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColorRefAdapter() {
		if (colorRefItemProvider == null) {
			colorRefItemProvider = new ColorRefItemProvider(this);
		}

		return colorRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Reference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceItemProvider referenceItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.Reference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceAdapter() {
		if (referenceItemProvider == null) {
			referenceItemProvider = new ReferenceItemProvider(this);
		}

		return referenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.IfMotor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfMotorItemProvider ifMotorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.IfMotor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfMotorAdapter() {
		if (ifMotorItemProvider == null) {
			ifMotorItemProvider = new IfMotorItemProvider(this);
		}

		return ifMotorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.EqualM} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqualMItemProvider equalMItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.EqualM}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqualMAdapter() {
		if (equalMItemProvider == null) {
			equalMItemProvider = new EqualMItemProvider(this);
		}

		return equalMItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.GreatherThanM} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GreatherThanMItemProvider greatherThanMItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.GreatherThanM}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGreatherThanMAdapter() {
		if (greatherThanMItemProvider == null) {
			greatherThanMItemProvider = new GreatherThanMItemProvider(this);
		}

		return greatherThanMItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.ElseMotor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElseMotorItemProvider elseMotorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.ElseMotor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElseMotorAdapter() {
		if (elseMotorItemProvider == null) {
			elseMotorItemProvider = new ElseMotorItemProvider(this);
		}

		return elseMotorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.SetThank} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetThankItemProvider setThankItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.SetThank}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetThankAdapter() {
		if (setThankItemProvider == null) {
			setThankItemProvider = new SetThankItemProvider(this);
		}

		return setThankItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.MoveLeft} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MoveLeftItemProvider moveLeftItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.MoveLeft}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMoveLeftAdapter() {
		if (moveLeftItemProvider == null) {
			moveLeftItemProvider = new MoveLeftItemProvider(this);
		}

		return moveLeftItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univcotedazur.l3ia.Tp_03_02_2022.OnForRotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnForRotationItemProvider onForRotationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univcotedazur.l3ia.Tp_03_02_2022.OnForRotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOnForRotationAdapter() {
		if (onForRotationItemProvider == null) {
			onForRotationItemProvider = new OnForRotationItemProvider(this);
		}

		return onForRotationItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (programItemProvider != null)
			programItemProvider.dispose();
		if (variableItemProvider != null)
			variableItemProvider.dispose();
		if (statementItemProvider != null)
			statementItemProvider.dispose();
		if (whileLoopItemProvider != null)
			whileLoopItemProvider.dispose();
		if (variableRefItemProvider != null)
			variableRefItemProvider.dispose();
		if (assignmentItemProvider != null)
			assignmentItemProvider.dispose();
		if (comparisonItemProvider != null)
			comparisonItemProvider.dispose();
		if (substractionItemProvider != null)
			substractionItemProvider.dispose();
		if (greaterThanItemProvider != null)
			greaterThanItemProvider.dispose();
		if (lowerThanItemProvider != null)
			lowerThanItemProvider.dispose();
		if (equalItemProvider != null)
			equalItemProvider.dispose();
		if (forLoopItemProvider != null)
			forLoopItemProvider.dispose();
		if (additionItemProvider != null)
			additionItemProvider.dispose();
		if (multiplicationItemProvider != null)
			multiplicationItemProvider.dispose();
		if (divisionItemProvider != null)
			divisionItemProvider.dispose();
		if (robotItemProvider != null)
			robotItemProvider.dispose();
		if (leftMotorItemProvider != null)
			leftMotorItemProvider.dispose();
		if (rightMotorItemProvider != null)
			rightMotorItemProvider.dispose();
		if (colorSensorItemProvider != null)
			colorSensorItemProvider.dispose();
		if (positionSensorItemProvider != null)
			positionSensorItemProvider.dispose();
		if (accelerateItemProvider != null)
			accelerateItemProvider.dispose();
		if (intensitySensorItemProvider != null)
			intensitySensorItemProvider.dispose();
		if (stopItemProvider != null)
			stopItemProvider.dispose();
		if (turnOnItemProvider != null)
			turnOnItemProvider.dispose();
		if (lightSensorItemProvider != null)
			lightSensorItemProvider.dispose();
		if (infraredSensorItemProvider != null)
			infraredSensorItemProvider.dispose();
		if (gyroSensorItemProvider != null)
			gyroSensorItemProvider.dispose();
		if (gpsSensorItemProvider != null)
			gpsSensorItemProvider.dispose();
		if (ultrasonicSensorItemProvider != null)
			ultrasonicSensorItemProvider.dispose();
		if (moveItemProvider != null)
			moveItemProvider.dispose();
		if (leftRotationItemProvider != null)
			leftRotationItemProvider.dispose();
		if (rightRotationItemProvider != null)
			rightRotationItemProvider.dispose();
		if (ifConditionItemProvider != null)
			ifConditionItemProvider.dispose();
		if (varIntItemProvider != null)
			varIntItemProvider.dispose();
		if (varrStringItemProvider != null)
			varrStringItemProvider.dispose();
		if (referenceToColorItemProvider != null)
			referenceToColorItemProvider.dispose();
		if (colorRefItemProvider != null)
			colorRefItemProvider.dispose();
		if (referenceItemProvider != null)
			referenceItemProvider.dispose();
		if (ifMotorItemProvider != null)
			ifMotorItemProvider.dispose();
		if (equalMItemProvider != null)
			equalMItemProvider.dispose();
		if (greatherThanMItemProvider != null)
			greatherThanMItemProvider.dispose();
		if (elseMotorItemProvider != null)
			elseMotorItemProvider.dispose();
		if (setThankItemProvider != null)
			setThankItemProvider.dispose();
		if (moveLeftItemProvider != null)
			moveLeftItemProvider.dispose();
		if (onForRotationItemProvider != null)
			onForRotationItemProvider.dispose();
	}

}
